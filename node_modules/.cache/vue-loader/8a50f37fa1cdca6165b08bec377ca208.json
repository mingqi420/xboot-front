{"remainingRequest":"D:\\dove\\project\\xboot\\xboot-front-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\dove\\project\\xboot\\xboot-front-master\\src\\views\\main-components\\shrinkable-menu\\components\\sidebarMenuShrink.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\dove\\project\\xboot\\xboot-front-master\\src\\views\\main-components\\shrinkable-menu\\components\\sidebarMenuShrink.vue","mtime":1600218271000},{"path":"D:\\dove\\project\\xboot\\xboot-front-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\dove\\project\\xboot\\xboot-front-master\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\dove\\project\\xboot\\xboot-front-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\dove\\project\\xboot\\xboot-front-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAic2lkZWJhck1lbnVTaHJpbmsiLAogIHByb3BzOiB7CiAgICBtZW51TGlzdDogewogICAgICB0eXBlOiBBcnJheQogICAgfSwKICAgIGljb25Db2xvcjogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6ICJ3aGl0ZSIKICAgIH0sCiAgICBtZW51VGhlbWU6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAiZGFyayIKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIGNoYW5nZU1lbnUoYWN0aXZlKSB7CiAgICAgIHRoaXMuJGVtaXQoIm9uLWNoYW5nZSIsIGFjdGl2ZSk7CiAgICB9LAogICAgaXRlbVRpdGxlKGl0ZW0pIHsKICAgICAgaWYgKHR5cGVvZiBpdGVtLnRpdGxlID09ICJvYmplY3QiKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuJHQoaXRlbS50aXRsZS5pMThuKTsKICAgICAgfSBlbHNlIHsKICAgICAgICByZXR1cm4gaXRlbS50aXRsZTsKICAgICAgfQogICAgfQogIH0KfTsK"},{"version":3,"sources":["sidebarMenuShrink.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"sidebarMenuShrink.vue","sourceRoot":"src/views/main-components/shrinkable-menu/components","sourcesContent":["<template>\n  <div>\n    <template v-for=\"(item, index) in menuList\">\n      <div style=\"text-align: center;\" :key=\"index\">\n        <Dropdown\n          transfer\n          v-if=\"item.children.length !== 1\"\n          placement=\"right-start\"\n          :key=\"index\"\n          @on-click=\"changeMenu\"\n        >\n          <Button style=\"width: 70px;height: 42px;margin-left: -5px;padding:10px 0;\" type=\"text\">\n            <Icon :size=\"20\" :color=\"iconColor\" :type=\"item.icon\"></Icon>\n          </Button>\n          <DropdownMenu style=\"width: 200px;\" slot=\"list\">\n            <template v-for=\"(child, i) in item.children\">\n              <DropdownItem :name=\"child.name\" :key=\"i\">\n                <Icon :type=\"child.icon\"></Icon>\n                <span style=\"padding-left:10px;\">{{ itemTitle(child) }}</span>\n              </DropdownItem>\n            </template>\n          </DropdownMenu>\n        </Dropdown>\n        <Dropdown transfer v-else placement=\"right-start\" :key=\"index\" @on-click=\"changeMenu\">\n          <Button\n            @click=\"changeMenu(item.children[0].name)\"\n            style=\"width: 70px;height: 42px;margin-left: -5px;padding:10px 0;\"\n            type=\"text\"\n          >\n            <Icon :size=\"20\" :color=\"iconColor\" :type=\"item.children[0].icon || item.icon\"></Icon>\n          </Button>\n          <DropdownMenu style=\"width: 200px;\" slot=\"list\">\n            <DropdownItem :name=\"item.children[0].name\" :key=\"'d' + index\">\n              <Icon :type=\"item.children[0].icon || item.icon\"></Icon>\n              <span style=\"padding-left:10px;\">{{ itemTitle(item.children[0]) }}</span>\n            </DropdownItem>\n          </DropdownMenu>\n        </Dropdown>\n      </div>\n    </template>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"sidebarMenuShrink\",\n  props: {\n    menuList: {\n      type: Array\n    },\n    iconColor: {\n      type: String,\n      default: \"white\"\n    },\n    menuTheme: {\n      type: String,\n      default: \"dark\"\n    }\n  },\n  methods: {\n    changeMenu(active) {\n      this.$emit(\"on-change\", active);\n    },\n    itemTitle(item) {\n      if (typeof item.title == \"object\") {\n        return this.$t(item.title.i18n);\n      } else {\n        return item.title;\n      }\n    }\n  }\n};\n</script>\n"]}]}