{"remainingRequest":"D:\\dove\\project\\xboot\\xboot-front-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\dove\\project\\xboot\\xboot-front-master\\src\\views\\sys\\quartz-manage\\quartzManage.vue?vue&type=style&index=0&lang=less&","dependencies":[{"path":"D:\\dove\\project\\xboot\\xboot-front-master\\src\\views\\sys\\quartz-manage\\quartzManage.vue","mtime":1600218271000},{"path":"D:\\dove\\project\\xboot\\xboot-front-master\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\dove\\project\\xboot\\xboot-front-master\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\dove\\project\\xboot\\xboot-front-master\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\dove\\project\\xboot\\xboot-front-master\\node_modules\\less-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\dove\\project\\xboot\\xboot-front-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\dove\\project\\xboot\\xboot-front-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CkBpbXBvcnQgIi4uLy4uLy4uL3N0eWxlcy90YWJsZS1jb21tb24ubGVzcyI7CkBpbXBvcnQgIi4vcXVhcnR6TWFuYWdlLmxlc3MiOwo="},{"version":3,"sources":["quartzManage.vue"],"names":[],"mappings":";AACA;AACA","file":"quartzManage.vue","sourceRoot":"src/views/sys/quartz-manage","sourcesContent":["<style lang=\"less\">\n@import \"../../../styles/table-common.less\";\n@import \"./quartzManage.less\";\n</style>\n<template>\n  <div class=\"search\">\n    <Card>\n      <Row class=\"operation\">\n        <Button @click=\"addRole\" type=\"primary\" icon=\"md-add\">安排新任务</Button>\n        <Button @click=\"delAll\" icon=\"md-trash\">批量删除</Button>\n        <Button @click=\"init\" icon=\"md-refresh\">刷新</Button>\n        <Button type=\"dashed\" @click=\"openTip=!openTip\">{{openTip ? \"关闭提示\" : \"开启提示\"}}</Button>\n      </Row>\n      <Row v-show=\"openTip\">\n        <Alert show-icon>\n          已选择\n          <span class=\"select-count\">{{selectCount}}</span> 项\n          <a class=\"select-clear\" @click=\"clearSelectAll\">清空</a>\n        </Alert>\n      </Row>\n      <Row>\n        <Table\n          :loading=\"loading\"\n          border\n          :columns=\"columns\"\n          :data=\"data\"\n          ref=\"table\"\n          sortable=\"custom\"\n          @on-sort-change=\"changeSort\"\n          @on-selection-change=\"changeSelect\"\n        ></Table>\n      </Row>\n      <Row type=\"flex\" justify=\"end\" class=\"page\">\n        <Page\n          :current=\"pageNumber\"\n          :total=\"total\"\n          :page-size=\"pageSize\"\n          @on-change=\"changePage\"\n          @on-page-size-change=\"changePageSize\"\n          :page-size-opts=\"[10,20,50]\"\n          size=\"small\"\n          show-total\n          show-elevator\n          show-sizer\n        ></Page>\n      </Row>\n    </Card>\n\n    <Modal draggable :title=\"modalTitle\" v-model=\"modalVisible\" :mask-closable=\"false\" :width=\"500\">\n      <Form ref=\"form\" :model=\"form\" :label-width=\"100\" :rules=\"formValidate\">\n        <FormItem label=\"任务类引用路径\" prop=\"jobClassName\">\n          <Input\n            v-model=\"form.jobClassName\"\n            placeholder=\"例如 cn.exrick.xboot.quartz.jobs.Job\"\n            clearable\n          />\n        </FormItem>\n        <FormItem label=\"cron表达式\" prop=\"cronExpression\" style=\"margin-bottom: 5px;\">\n          <Input v-model=\"form.cronExpression\" clearable />\n          <a target=\"_blank\" href=\"https://www.pppet.net/\">\n            <Icon type=\"md-arrow-dropright-circle\" size=\"16\" style=\"margin:0 3px 3px 0;\" />在线cron表达式生成\n          </a>\n        </FormItem>\n        <FormItem label=\"参数\" prop=\"parameter\">\n          <Input v-model=\"form.parameter\" />\n        </FormItem>\n        <FormItem label=\"备注\" prop=\"description\">\n          <Input v-model=\"form.description\" />\n        </FormItem>\n      </Form>\n      <div slot=\"footer\">\n        <Button type=\"text\" @click=\"cancelSubmit\">取消</Button>\n        <Button type=\"primary\" :loading=\"submitLoading\" @click=\"handleSubmit\">保存并安排</Button>\n      </div>\n    </Modal>\n  </div>\n</template>\n\n<script>\nimport {\n  getQuartzListData,\n  addQuartz,\n  editQuartz,\n  pauseQuartz,\n  resumeQuartz,\n  deleteQuartz\n} from \"@/api/index\";\nexport default {\n  name: \"quartz-manage\",\n  data() {\n    return {\n      openTip: true,\n      loading: true,\n      sortColumn: \"createTime\",\n      sortType: \"desc\",\n      modalType: 0,\n      modalVisible: false,\n      modalTitle: \"\",\n      form: {\n        id: \"\",\n        jobClassName: \"\",\n        cronExpression: \"\",\n        paramter: \"\",\n        description: \"\"\n      },\n      formValidate: {\n        jobClassName: [\n          { required: true, message: \"任务类名不能为空\", trigger: \"blur\" }\n        ],\n        cronExpression: [\n          { required: true, message: \"cron表达式不能为空\", trigger: \"blur\" }\n        ]\n      },\n      submitLoading: false,\n      selectList: [],\n      selectCount: 0,\n      columns: [\n        {\n          type: \"selection\",\n          width: 60,\n          align: \"center\"\n        },\n        {\n          type: \"index\",\n          width: 60,\n          align: \"center\"\n        },\n        {\n          title: \"任务类\",\n          key: \"jobClassName\",\n          sortable: true,\n          minWidth: 200\n        },\n        {\n          title: \"cron表达式\",\n          key: \"cronExpression\",\n          sortable: true,\n          minWidth: 200\n        },\n        {\n          title: \"参数\",\n          key: \"parameter\",\n          sortable: true,\n          minWidth: 180\n        },\n        {\n          title: \"备注\",\n          key: \"description\",\n          sortable: true,\n          minWidth: 180\n        },\n        {\n          title: \"状态\",\n          key: \"status\",\n          align: \"center\",\n          width: 140,\n          render: (h, params) => {\n            let re = \"\";\n            if (params.row.status == 0) {\n              return h(\"div\", [\n                h(\"Badge\", {\n                  props: {\n                    status: \"success\",\n                    text: \"执行中\"\n                  }\n                })\n              ]);\n            } else if (params.row.status == -1) {\n              return h(\"div\", [\n                h(\"Badge\", {\n                  props: {\n                    status: \"error\",\n                    text: \"已停止\"\n                  }\n                })\n              ]);\n            }\n          },\n          filters: [\n            {\n              label: \"执行中\",\n              value: 0\n            },\n            {\n              label: \"已停止\",\n              value: -1\n            }\n          ],\n          filterMultiple: false,\n          filterMethod(value, row) {\n            if (value == 0) {\n              return row.status == 0;\n            } else if (value == -1) {\n              return row.status == -1;\n            }\n          }\n        },\n        {\n          title: \"操作\",\n          key: \"action\",\n          align: \"center\",\n          width: 280,\n          render: (h, params) => {\n            let runOrResume = \"\";\n            if (params.row.status == 0) {\n              runOrResume = h(\n                \"Button\",\n                {\n                  props: {\n                    type: \"warning\",\n                    size: \"small\",\n                    icon: \"md-pause\"\n                  },\n                  style: {\n                    marginRight: \"5px\"\n                  },\n                  on: {\n                    click: () => {\n                      this.pause(params.row);\n                    }\n                  }\n                },\n                \"暂停\"\n              );\n            } else {\n              runOrResume = h(\n                \"Button\",\n                {\n                  props: {\n                    type: \"success\",\n                    size: \"small\",\n                    icon: \"md-play\"\n                  },\n                  style: {\n                    marginRight: \"5px\"\n                  },\n                  on: {\n                    click: () => {\n                      this.resume(params.row);\n                    }\n                  }\n                },\n                \"恢复执行\"\n              );\n            }\n            return h(\"div\", [\n              runOrResume,\n              h(\n                \"Button\",\n                {\n                  props: {\n                    type: \"primary\",\n                    size: \"small\"\n                  },\n                  style: {\n                    marginRight: \"5px\"\n                  },\n                  on: {\n                    click: () => {\n                      this.edit(params.row);\n                    }\n                  }\n                },\n                \"编辑\"\n              ),\n              h(\n                \"Button\",\n                {\n                  props: {\n                    type: \"error\",\n                    size: \"small\"\n                  },\n                  on: {\n                    click: () => {\n                      this.remove(params.row);\n                    }\n                  }\n                },\n                \"删除\"\n              )\n            ]);\n          }\n        }\n      ],\n      data: [],\n      pageNumber: 1,\n      pageSize: 10,\n      total: 0\n    };\n  },\n  methods: {\n    init() {\n      this.getQuartzList();\n    },\n    changePage(v) {\n      this.pageNumber = v;\n      this.getQuartzList();\n      this.clearSelectAll();\n    },\n    changePageSize(v) {\n      this.pageSize = v;\n      this.getQuartzList();\n    },\n    changeSort(e) {\n      this.sortColumn = e.key;\n      this.sortType = e.order;\n      if (e.order == \"normal\") {\n        this.sortType = \"\";\n      }\n      this.getQuartzList();\n    },\n    getQuartzList() {\n      this.loading = true;\n      let params = {\n        pageNumber: this.pageNumber,\n        pageSize: this.pageSize,\n        sort: this.sortColumn,\n        order: this.sortType\n      };\n      getQuartzListData(params).then(res => {\n        this.loading = false;\n        if (res.success) {\n          this.data = res.result.content;\n          this.total = res.result.totalElements;\n        }\n      });\n    },\n    cancelSubmit() {\n      this.modalVisible = false;\n    },\n    handleSubmit() {\n      this.$refs.form.validate(valid => {\n        if (valid) {\n          if (this.modalType == 0) {\n            // 添加\n            this.submitLoading = true;\n            addQuartz(this.form).then(res => {\n              this.submitLoading = false;\n              if (res.success) {\n                this.$Message.success(\"操作成功\");\n                this.getQuartzList();\n                this.modalVisible = false;\n              }\n            });\n          } else {\n            this.submitLoading = true;\n            editQuartz(this.form).then(res => {\n              this.submitLoading = false;\n              if (res.success) {\n                this.$Message.success(\"操作成功\");\n                this.getQuartzList();\n                this.modalVisible = false;\n              }\n            });\n          }\n        }\n      });\n    },\n    addRole() {\n      this.modalType = 0;\n      this.modalTitle = \"添加任务\";\n      this.$refs.form.resetFields();\n      (this.form = {\n        paramter: \"\",\n        description: \"\"\n      }),\n        (this.modalVisible = true);\n    },\n    edit(v) {\n      this.modalType = 1;\n      this.modalTitle = \"编辑任务\";\n      this.$refs.form.resetFields();\n      // 转换null为\"\"\n      for (let attr in v) {\n        if (v[attr] == null) {\n          v[attr] = \"\";\n        }\n      }\n      let str = JSON.stringify(v);\n      let data = JSON.parse(str);\n      this.form = data;\n      this.modalVisible = true;\n    },\n    pause(v) {\n      this.$Modal.confirm({\n        title: \"确认停止\",\n        content: \"您确认要停止任务 \" + v.jobClassName + \" ?\",\n        loading: true,\n        onOk: () => {\n          pauseQuartz(v).then(res => {\n            this.$Modal.remove();\n            if (res.success) {\n              this.$Message.success(\"操作成功\");\n              this.getQuartzList();\n            }\n          });\n        }\n      });\n    },\n    resume(v) {\n      this.$Modal.confirm({\n        title: \"确认恢复\",\n        content: \"您确认要恢复任务 \" + v.jobClassName + \" ?\",\n        loading: true,\n        onOk: () => {\n          resumeQuartz(v).then(res => {\n            this.$Modal.remove();\n            if (res.success) {\n              this.$Message.success(\"操作成功\");\n              this.getQuartzList();\n            }\n          });\n        }\n      });\n    },\n    remove(v) {\n      this.$Modal.confirm({\n        title: \"确认删除\",\n        content: \"您确认要删除任务 \" + v.jobClassName + \" ?\",\n        loading: true,\n        onOk: () => {\n          deleteQuartz({ids: v.id}).then(res => {\n            this.$Modal.remove();\n            if (res.success) {\n              this.$Message.success(\"操作成功\");\n              this.getQuartzList();\n            }\n          });\n        }\n      });\n    },\n    clearSelectAll() {\n      this.$refs.table.selectAll(false);\n    },\n    changeSelect(e) {\n      this.selectList = e;\n      this.selectCount = e.length;\n    },\n    delAll() {\n      if (this.selectCount <= 0) {\n        this.$Message.warning(\"您还未选择要删除的数据\");\n        return;\n      }\n      this.$Modal.confirm({\n        title: \"确认删除\",\n        content: \"您确认要删除所选的 \" + this.selectCount + \" 条数据?\",\n        loading: true,\n        onOk: () => {\n          let ids = \"\";\n          this.selectList.forEach(function(e) {\n            ids += e.id + \",\";\n          });\n          ids = ids.substring(0, ids.length - 1);\n          deleteQuartz({ids: ids}).then(res => {\n            this.$Modal.remove();\n            if (res.success) {\n              this.$Message.success(\"删除成功\");\n              this.clearSelectAll();\n              this.getQuartzList();\n            }\n          });\n        }\n      });\n    }\n  },\n  mounted() {\n    this.init();\n  }\n};\n</script>"]}]}