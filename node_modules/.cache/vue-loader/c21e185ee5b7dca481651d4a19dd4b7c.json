{"remainingRequest":"D:\\dove\\project\\xboot\\xboot-front-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\dove\\project\\xboot\\xboot-front-master\\src\\views\\xboot-vue-template\\tree\\tree.vue?vue&type=style&index=0&lang=less&","dependencies":[{"path":"D:\\dove\\project\\xboot\\xboot-front-master\\src\\views\\xboot-vue-template\\tree\\tree.vue","mtime":1600218271000},{"path":"D:\\dove\\project\\xboot\\xboot-front-master\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\dove\\project\\xboot\\xboot-front-master\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\dove\\project\\xboot\\xboot-front-master\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\dove\\project\\xboot\\xboot-front-master\\node_modules\\less-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\dove\\project\\xboot\\xboot-front-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\dove\\project\\xboot\\xboot-front-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CkBpbXBvcnQgIi4uLy4uLy4uL3N0eWxlcy90cmVlLWNvbW1vbi5sZXNzIjsK"},{"version":3,"sources":["tree.vue"],"names":[],"mappings":";AACA","file":"tree.vue","sourceRoot":"src/views/xboot-vue-template/tree","sourcesContent":["<style lang=\"less\">\n@import \"../../../styles/tree-common.less\";\n</style>\n<template>\n  <div class=\"search\">\n    <Card>\n      <Row class=\"operation\">\n        <Button @click=\"add\" type=\"primary\" icon=\"md-add\">添加子节点</Button>\n        <Button @click=\"addRoot\" icon=\"md-add\">添加一级节点</Button>\n        <Button @click=\"delAll\" icon=\"md-trash\">批量删除</Button>\n        <Button @click=\"getParentList\" icon=\"md-refresh\">刷新</Button>\n        <i-switch v-model=\"strict\" size=\"large\" style=\"margin-left:5px\">\n          <span slot=\"open\">级联</span>\n          <span slot=\"close\">单选</span>\n        </i-switch>\n      </Row>\n      <Row type=\"flex\" justify=\"start\">\n        <Col :md=\"8\" :lg=\"8\" :xl=\"6\">\n          <Alert show-icon>\n            当前选择编辑：\n            <span class=\"select-title\">{{editTitle}}</span>\n            <a class=\"select-clear\" v-if=\"form.id\" @click=\"cancelEdit\">取消选择</a>\n          </Alert>\n          <Input\n            v-model=\"searchKey\"\n            suffix=\"ios-search\"\n            @on-change=\"search\"\n            placeholder=\"输入节点名搜索\"\n            clearable\n          />\n          <div class=\"tree-bar\" :style=\"{maxHeight: maxHeight}\">\n            <Tree\n              ref=\"tree\"\n              :data=\"data\"\n              :load-data=\"loadData\"\n              show-checkbox\n              @on-check-change=\"changeSelect\"\n              @on-select-change=\"selectTree\"\n              :check-strictly=\"!strict\"\n            ></Tree>\n            <Spin size=\"large\" fix v-if=\"loading\"></Spin>\n          </div>\n        </Col>\n        <Col :md=\"15\" :lg=\"13\" :xl=\"9\" style=\"margin-left:10px;\">\n          <Form ref=\"form\" :model=\"form\" :label-width=\"100\" :rules=\"formValidate\">\n            <FormItem label=\"上级节点\" prop=\"parentTitle\">\n              <div style=\"display:flex;\">\n                <Input v-model=\"form.parentTitle\" readonly style=\"margin-right:10px;\" />\n                <Poptip transfer trigger=\"click\" placement=\"right-start\" title=\"选择上级节点\" width=\"250\">\n                  <Button icon=\"md-list\">选择分类</Button>\n                  <div slot=\"content\" style=\"position:relative;min-height:5vh\">\n                    <Tree :data=\"dataEdit\" :load-data=\"loadData\" @on-select-change=\"selectTreeEdit\"></Tree>\n                    <Spin size=\"large\" fix v-if=\"loadingEdit\"></Spin>\n                  </div>\n                </Poptip>\n              </div>\n            </FormItem>\n            <FormItem label=\"节点名称\" prop=\"title\">\n              <Input v-model=\"form.title\" />\n            </FormItem>\n            <FormItem label=\"排序值\" prop=\"sortOrder\">\n              <Tooltip trigger=\"hover\" placement=\"right\" content=\"值越小越靠前，支持小数\">\n                <InputNumber :max=\"1000\" :min=\"0\" v-model=\"form.sortOrder\"></InputNumber>\n              </Tooltip>\n            </FormItem>\n            <FormItem label=\"是否启用\" prop=\"status\">\n              <i-switch size=\"large\" v-model=\"form.status\" :true-value=\"0\" :false-value=\"-1\">\n                <span slot=\"open\">启用</span>\n                <span slot=\"close\">禁用</span>\n              </i-switch>\n            </FormItem>\n            <Form-item>\n              <Button\n                @click=\"submitEdit\"\n                :loading=\"submitLoading\"\n                type=\"primary\"\n                icon=\"ios-create-outline\"\n                style=\"margin-right:5px\"\n              >修改并保存</Button>\n              <Button @click=\"handleReset\">重置</Button>\n            </Form-item>\n          </Form>\n        </Col>\n      </Row>\n    </Card>\n\n    <Modal :title=\"modalTitle\" v-model=\"modalVisible\" :mask-closable=\"false\" :width=\"500\">\n      <Form ref=\"formAdd\" :model=\"formAdd\" :label-width=\"100\" :rules=\"formValidate\">\n        <div v-if=\"showParent\">\n          <FormItem label=\"上级节点：\">{{form.title}}</FormItem>\n        </div>\n        <FormItem label=\"节点名称\" prop=\"title\">\n          <Input v-model=\"formAdd.title\" />\n        </FormItem>\n        <FormItem label=\"排序值\" prop=\"sortOrder\">\n          <Tooltip trigger=\"hover\" placement=\"right\" content=\"值越小越靠前，支持小数\">\n            <InputNumber :max=\"1000\" :min=\"0\" v-model=\"formAdd.sortOrder\"></InputNumber>\n          </Tooltip>\n        </FormItem>\n        <FormItem label=\"是否启用\" prop=\"status\">\n          <i-switch size=\"large\" v-model=\"formAdd.status\" :true-value=\"0\" :false-value=\"-1\">\n            <span slot=\"open\">启用</span>\n            <span slot=\"close\">禁用</span>\n          </i-switch>\n        </FormItem>\n      </Form>\n      <div slot=\"footer\">\n        <Button type=\"text\" @click=\"modalVisible=false\">取消</Button>\n        <Button type=\"primary\" :loading=\"submitLoading\" @click=\"submitAdd\">提交</Button>\n      </div>\n    </Modal>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"tree\",\n  data() {\n    return {\n      loading: false, // 树加载状态\n      maxHeight: \"500px\",\n      strict: true,\n      loadingEdit: false, // 编辑上级树加载状态\n      modalVisible: false, // 添加显示\n      selectList: [], // 多选数据\n      selectCount: 0, // 多选计数\n      showParent: false, // 显示上级标识\n      modalTitle: \"\", // 添加标题\n      editTitle: \"\", // 编辑节点名称\n      searchKey: \"\", // 搜索树\n      form: {\n        // 编辑对象初始化数据\n        id: \"\",\n        title: \"\",\n        parentId: \"\",\n        parentTitle: \"\",\n        sortOrder: 0,\n        status: 0\n      },\n      formAdd: {\n        // 添加对象初始化数据\n      },\n      formValidate: {\n        // 表单验证规则\n        title: [{ required: true, message: \"名称不能为空\", trigger: \"blur\" }],\n        sortOrder: [\n          {\n            required: true,\n            type: \"number\",\n            message: \"排序值不能为空\",\n            trigger: \"blur\"\n          }\n        ]\n      },\n      submitLoading: false,\n      data: [],\n      dataEdit: []\n    };\n  },\n  methods: {\n    init() {\n      // 初始化一级节点\n      this.getParentList();\n      // 初始化一级节点为编辑上级节点使用\n      this.getParentListEdit();\n    },\n    getParentList() {\n      // this.loading = true;\n      // this.getRequest(\"一级数据请求路径，如/tree/getByParentId/0\").then(res => {\n      //   this.loading = false;\n      //   if (res.success) {\n      //     res.result.forEach(function(e) {\n      //       if (e.isParent) {\n      //         e.loading = false;\n      //         e.children = [];\n      //       }\n      //     });\n      //     this.data = res.result;\n      //   }\n      // });\n      // 模拟请求成功\n      this.data = [\n        {\n          title: \"一级1\",\n          id: \"1\",\n          parentId: \"0\",\n          parentTitle: \"一级节点\",\n          status: 0,\n          loading: false,\n          children: [\n            {\n              title: \"二级1\",\n              id: \"2\",\n              loading: false,\n              parentId: \"1\",\n              status: 0,\n              parentTitle: \"一级1\",\n              children: [\n                {\n                  title: \"三级1\",\n                  id: \"3\",\n                  status: 0,\n                  parentId: \"2\",\n                  parentTitle: \"二级1\"\n                }\n              ]\n            }\n          ]\n        },\n        {\n          title: \"一级2\",\n          id: \"4\",\n          parentId: \"0\",\n          parentTitle: \"一级节点\",\n          status: 0\n        },\n        {\n          title: \"一级3\",\n          id: \"5\",\n          parentId: \"0\",\n          parentTitle: \"一级节点\",\n          status: -1\n        }\n      ];\n    },\n    getParentListEdit() {\n      // this.loadingEdit = true;\n      // this.getRequest(\"/tree/getByParentId/0\").then(res => {\n      //   this.loadingEdit = false;\n      //   if (res.success) {\n      //     res.result.forEach(function(e) {\n      //       if (e.isParent) {\n      //         e.loading = false;\n      //         e.children = [];\n      //       }\n      //     });\n      //     // 头部加入一级\n      //     let first = {\n      //       id: \"0\",\n      //       title: \"一级节点\"\n      //     };\n      //     res.result.unshift(first);\n      //     this.dataEdit = res.result;\n      //   }\n      // });\n      // 模拟请求成功\n      this.dataEdit = [\n        {\n          id: \"0\",\n          title: \"一级节点\"\n        },\n        {\n          title: \"一级1\",\n          id: \"1\",\n          parentId: \"0\",\n          parentTitle: \"一级节点\",\n          status: 0,\n          loading: false,\n          children: [\n            {\n              title: \"二级1\",\n              id: \"2\",\n              loading: false,\n              parentId: \"1\",\n              status: 0,\n              parentTitle: \"一级1\",\n              children: [\n                {\n                  title: \"三级1\",\n                  id: \"3\",\n                  status: 0,\n                  parentId: \"2\",\n                  parentTitle: \"二级1\"\n                }\n              ]\n            }\n          ]\n        },\n        {\n          title: \"一级2\",\n          id: \"4\",\n          parentId: \"0\",\n          parentTitle: \"一级节点\",\n          status: 0\n        },\n        {\n          title: \"一级3\",\n          id: \"5\",\n          parentId: \"0\",\n          parentTitle: \"一级节点\",\n          status: -1\n        }\n      ];\n    },\n    loadData(item, callback) {\n      // 异步加载树子节点数据\n      // this.getRequest(\"请求路径，如/tree/getByParentId/\" + item.id).then(res => {\n      //   if (res.success) {\n      //     res.result.forEach(function(e) {\n      //       if (e.isParent) {\n      //         e.loading = false;\n      //         e.children = [];\n      //       }\n      //     });\n      //     callback(res.result);\n      //   }\n      // });\n    },\n    search() {\n      // 搜索树\n      if (this.searchKey) {\n        // 模拟请求\n        // this.loading = true;\n        // this.getRequest(\"搜索请求路径\", { title: this.searchKey }).then(res => {\n        //   this.loading = false;\n        //   if (res.success) {\n        //     this.data = res.result;\n        //   }\n        // });\n        // 模拟请求成功\n        this.data = [\n          {\n            title: \"这里需要请求后端接口\",\n            id: \"1\",\n            parentId: \"0\",\n            parentTitle: \"一级节点\",\n            status: 0\n          },\n          {\n            title: \"所以这里是假数据\",\n            id: \"4\",\n            parentId: \"0\",\n            parentTitle: \"一级节点\",\n            status: 0\n          },\n          {\n            title: \"我是被禁用的节点\",\n            id: \"5\",\n            parentId: \"0\",\n            parentTitle: \"一级节点\",\n            status: -1\n          }\n        ];\n      } else {\n        // 为空重新加载\n        this.getParentList();\n      }\n    },\n    selectTree(v) {\n      if (v.length > 0) {\n        // 转换null为\"\"\n        for (let attr in v[0]) {\n          if (v[0][attr] == null) {\n            v[0][attr] = \"\";\n          }\n        }\n        let str = JSON.stringify(v[0]);\n        let data = JSON.parse(str);\n        this.form = data;\n        this.editTitle = data.title;\n      } else {\n        this.cancelEdit();\n      }\n    },\n    cancelEdit() {\n      let data = this.$refs.tree.getSelectedNodes()[0];\n      if (data) {\n        data.selected = false;\n      }\n      this.$refs.form.resetFields();\n      this.form.id = \"\";\n      this.editTitle = \"\";\n    },\n    selectTreeEdit(v) {\n      if (v.length > 0) {\n        // 转换null为\"\"\n        for (let attr in v[0]) {\n          if (v[0][attr] == null) {\n            v[0][attr] = \"\";\n          }\n        }\n        let str = JSON.stringify(v[0]);\n        let data = JSON.parse(str);\n        this.form.parentId = data.id;\n        this.form.parentTitle = data.title;\n      }\n    },\n    handleReset() {\n      this.$refs.form.resetFields();\n      this.form.status = 0;\n    },\n    submitEdit() {\n      this.$refs.form.validate(valid => {\n        if (valid) {\n          if (!this.form.id) {\n            this.$Message.warning(\"请先点击选择要修改的节点\");\n            return;\n          }\n          this.submitLoading = true;\n          // 避免传入null字符串\n          // this.postRequest(\"请求路径，如/tree/edit\", this.form).then(res => {\n          //   this.submitLoading = false;\n          //   if (res.success) {\n          //     this.$Message.success(\"编辑成功\");\n          //     this.init();\n          //     this.modalVisible = false;\n          //   }\n          // });\n          // 模拟成功\n          this.submitLoading = false;\n          this.$Message.success(\"编辑成功\");\n          this.modalVisible = false;\n        }\n      });\n    },\n    submitAdd() {\n      this.$refs.formAdd.validate(valid => {\n        if (valid) {\n          this.submitLoading = true;\n          // this.postRequest(\"请求路径，如/tree/add\", this.formAdd).then(res => {\n          //   this.submitLoading = false;\n          //   if (res.success) {\n          //     this.$Message.success(\"添加成功\");\n          //     this.init();\n          //     this.modalVisible = false;\n          //   }\n          // });\n          // 模拟成功\n          this.submitLoading = false;\n          this.$Message.success(\"添加成功\");\n          this.modalVisible = false;\n        }\n      });\n    },\n    add() {\n      if (!this.form.id) {\n        this.$Message.warning(\"请先点击选择一个节点\");\n        return;\n      }\n      this.modalTitle = \"添加子节点\";\n      this.showParent = true;\n      this.formAdd = {\n        parentId: this.form.id,\n        sortOrder: 0,\n        status: 0\n      };\n      this.modalVisible = true;\n    },\n    addRoot() {\n      this.modalTitle = \"添加一级节点\";\n      this.showParent = false;\n      this.formAdd = {\n        parentId: 0,\n        sortOrder: 0,\n        status: 0\n      };\n      this.modalVisible = true;\n    },\n    changeSelect(v) {\n      this.selectCount = v.length;\n      this.selectList = v;\n    },\n    delAll() {\n      if (this.selectCount <= 0) {\n        this.$Message.warning(\"您还未勾选要删除的数据\");\n        return;\n      }\n      this.$Modal.confirm({\n        title: \"确认删除\",\n        content:\n          \"您确认要删除所选的 \" + this.selectCount + \" 条数据及其下级所有数据?\",\n        loading: true,\n        onOk: () => {\n          let ids = \"\";\n          this.selectList.forEach(function(e) {\n            ids += e.id + \",\";\n          });\n          ids = ids.substring(0, ids.length - 1);\n          // this.deleteRequest(\"请求路径，如/tree/delByIds/\" + ids).then(res => {\n          //   this.$Modal.remove();\n          //   if (res.success) {\n          //     this.$Message.success(\"删除成功\");\n          //     this.selectList = [];\n          //     this.selectCount = 0;\n          //     this.cancelEdit();\n          //     this.init();\n          //   }\n          // });\n          // 模拟成功\n          this.$Modal.remove();\n          this.$Message.success(\"删除成功\");\n          this.selectList = [];\n          this.selectCount = 0;\n          this.cancelEdit();\n        }\n      });\n    }\n  },\n  mounted() {\n    // 计算高度\n    let height = document.documentElement.clientHeight;\n    this.maxHeight = Number(height - 287) + \"px\";\n    this.init();\n  }\n};\n</script>"]}]}