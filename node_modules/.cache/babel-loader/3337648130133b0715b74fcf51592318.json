{"remainingRequest":"D:\\dove\\project\\xboot\\xboot-front-master\\node_modules\\babel-loader\\lib\\index.js!D:\\dove\\project\\xboot\\xboot-front-master\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\dove\\project\\xboot\\xboot-front-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\dove\\project\\xboot\\xboot-front-master\\src\\views\\sys\\dict-manage\\dictManage.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\dove\\project\\xboot\\xboot-front-master\\src\\views\\sys\\dict-manage\\dictManage.vue","mtime":1600218271000},{"path":"D:\\dove\\project\\xboot\\xboot-front-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\dove\\project\\xboot\\xboot-front-master\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\dove\\project\\xboot\\xboot-front-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\dove\\project\\xboot\\xboot-front-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["dictManage.vue"],"names":[],"mappings":"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","sourcesContent":["<style lang=\"less\">\n@import \"../../../styles/tree&table-common.less\";\n@import \"./dictManage.less\";\n</style>\n<template>\n  <div class=\"search\">\n    <Card>\n      <Row type=\"flex\" justify=\"space-between\">\n        <Col v-if=\"expand\" span=\"5\">\n          <Row class=\"operation\">\n            <Button @click=\"addDcit\" type=\"primary\" icon=\"md-add\">添加字典</Button>\n            <Dropdown @on-click=\"handleDropdown\">\n              <Button>\n                更多操作\n                <Icon type=\"md-arrow-dropdown\" />\n              </Button>\n              <DropdownMenu slot=\"list\">\n                <DropdownItem name=\"editDcit\">编辑字典</DropdownItem>\n                <DropdownItem name=\"delDcit\">删除字典</DropdownItem>\n                <DropdownItem name=\"refreshDcit\">刷新</DropdownItem>\n              </DropdownMenu>\n            </Dropdown>\n          </Row>\n          <Alert show-icon>\n            当前选择：\n            <span class=\"select-title\">{{editTitle}}</span>\n            <a class=\"select-clear\" v-if=\"editTitle\" @click=\"cancelEdit\">取消选择</a>\n          </Alert>\n          <Input\n            v-model=\"searchKey\"\n            suffix=\"ios-search\"\n            @on-change=\"search\"\n            placeholder=\"输入搜索字典\"\n            clearable\n          />\n          <div class=\"tree-bar\" :style=\"{maxHeight: maxHeight}\">\n            <Tree ref=\"tree\" :data=\"treeData\" @on-select-change=\"selectTree\"></Tree>\n            <Spin size=\"large\" fix v-if=\"treeLoading\"></Spin>\n          </div>\n        </Col>\n        <div class=\"expand\">\n          <Icon :type=\"expandIcon\" size=\"16\" class=\"icon\" @click=\"changeExpand\" />\n        </div>\n        <Col :span=\"span\">\n          <Row v-show=\"openSearch\" @keydown.enter.native=\"handleSearch\">\n            <Form ref=\"searchForm\" :model=\"searchForm\" inline :label-width=\"70\">\n              <Form-item label=\"数据名称\" prop=\"title\">\n                <Input\n                  type=\"text\"\n                  v-model=\"searchForm.title\"\n                  placeholder=\"请输入\"\n                  clearable\n                  style=\"width: 200px\"\n                />\n              </Form-item>\n              <Form-item label=\"状态\" prop=\"status\">\n                <Select\n                  v-model=\"searchForm.status\"\n                  placeholder=\"请选择\"\n                  clearable\n                  style=\"width: 200px\"\n                >\n                  <Option value=\"0\">正常</Option>\n                  <Option value=\"-1\">禁用</Option>\n                </Select>\n              </Form-item>\n              <Form-item style=\"margin-left:-35px;\" class=\"br\">\n                <Button @click=\"handleSearch\" type=\"primary\" icon=\"ios-search\">搜索</Button>\n                <Button @click=\"handleReset\">重置</Button>\n              </Form-item>\n            </Form>\n          </Row>\n          <Row class=\"operation\">\n            <Button @click=\"add\" type=\"primary\" icon=\"md-add\">添加数据</Button>\n            <Button @click=\"delAll\" icon=\"md-trash\">批量删除</Button>\n            <Button @click=\"getDataList\" icon=\"md-refresh\">刷新数据</Button>\n            <Button type=\"dashed\" @click=\"openSearch=!openSearch\">{{openSearch ? \"关闭搜索\" : \"开启搜索\"}}</Button>\n            <Button type=\"dashed\" @click=\"openTip=!openTip\">{{openTip ? \"关闭提示\" : \"开启提示\"}}</Button>\n          </Row>\n          <Row v-show=\"openTip\">\n            <Alert show-icon>\n              已选择\n              <span class=\"select-count\">{{selectCount}}</span> 项\n              <a class=\"select-clear\" @click=\"clearSelectAll\">清空</a>\n            </Alert>\n          </Row>\n          <Row>\n            <Table\n              :loading=\"loading\"\n              border\n              :columns=\"columns\"\n              :data=\"data\"\n              sortable=\"custom\"\n              @on-sort-change=\"changeSort\"\n              @on-selection-change=\"showSelect\"\n              ref=\"table\"\n            ></Table>\n          </Row>\n          <Row type=\"flex\" justify=\"end\" class=\"page\">\n            <Page\n              :current=\"searchForm.pageNumber\"\n              :total=\"total\"\n              :page-size=\"searchForm.pageSize\"\n              @on-change=\"changePage\"\n              @on-page-size-change=\"changePageSize\"\n              :page-size-opts=\"[10,20,50]\"\n              size=\"small\"\n              show-total\n              show-elevator\n              show-sizer\n            ></Page>\n          </Row>\n        </Col>\n      </Row>\n    </Card>\n\n    <Modal :title=\"dictModalTitle\" v-model=\"dictModalVisible\" :mask-closable=\"false\" :width=\"500\">\n      <Form ref=\"dictForm\" :model=\"dictForm\" :label-width=\"85\" :rules=\"dictFormValidate\">\n        <FormItem label=\"字典名称\" prop=\"title\">\n          <Input v-model=\"dictForm.title\" />\n        </FormItem>\n        <FormItem label=\"字典类型\" prop=\"type\" class=\"block-tool\">\n          <Tooltip placement=\"right\" :max-width=\"220\" transfer content=\"建议英文名且需唯一 非开发人员谨慎修改\">\n            <Input v-model=\"dictForm.type\" />\n          </Tooltip>\n        </FormItem>\n        <FormItem label=\"备注\" prop=\"description\">\n          <Input v-model=\"dictForm.description\" />\n        </FormItem>\n        <FormItem label=\"排序值\" prop=\"sortOrder\">\n          <Tooltip trigger=\"hover\" placement=\"right\" content=\"值越小越靠前，支持小数\">\n            <InputNumber :max=\"1000\" :min=\"0\" v-model=\"dictForm.sortOrder\"></InputNumber>\n          </Tooltip>\n        </FormItem>\n      </Form>\n      <div slot=\"footer\">\n        <Button type=\"text\" @click=\"dictModalVisible=false\">取消</Button>\n        <Button type=\"primary\" :loading=\"submitLoading\" @click=\"handelSubmitDict\">提交</Button>\n      </div>\n    </Modal>\n\n    <Modal :title=\"modalTitle\" v-model=\"modalVisible\" :mask-closable=\"false\" :width=\"500\">\n      <Form ref=\"form\" :model=\"form\" :label-width=\"80\" :rules=\"formValidate\">\n        <FormItem label=\"名称\" prop=\"title\">\n          <Input v-model=\"form.title\" />\n        </FormItem>\n        <FormItem label=\"数据值\" prop=\"value\">\n          <Input v-model=\"form.value\" />\n        </FormItem>\n        <FormItem label=\"备注\" prop=\"description\">\n          <Input v-model=\"form.description\" />\n        </FormItem>\n        <FormItem label=\"排序值\" prop=\"sortOrder\">\n          <Tooltip trigger=\"hover\" placement=\"right\" content=\"值越小越靠前，支持小数\">\n            <InputNumber :max=\"1000\" :min=\"0\" v-model=\"form.sortOrder\"></InputNumber>\n          </Tooltip>\n        </FormItem>\n        <FormItem label=\"是否启用\" prop=\"status\">\n          <i-switch size=\"large\" v-model=\"form.status\" :true-value=\"0\" :false-value=\"-1\">\n            <span slot=\"open\">启用</span>\n            <span slot=\"close\">禁用</span>\n          </i-switch>\n        </FormItem>\n      </Form>\n      <div slot=\"footer\">\n        <Button type=\"text\" @click=\"modalVisible=false\">取消</Button>\n        <Button type=\"primary\" :loading=\"submitLoading\" @click=\"handelSubmit\">提交</Button>\n      </div>\n    </Modal>\n  </div>\n</template>\n\n<script>\nimport {\n  getAllDictList,\n  addDict,\n  editDict,\n  deleteDict,\n  searchDict,\n  getAllDictDataList,\n  addDictData,\n  editDictData,\n  deleteData\n} from \"@/api/index\";\nexport default {\n  name: \"dic-manage\",\n  data() {\n    return {\n      openSearch: true,\n      openTip: true,\n      treeLoading: false, // 树加载状态\n      maxHeight: \"500px\",\n      loading: false, // 表格加载状态\n      editTitle: \"\", // 编辑节点名称\n      searchKey: \"\", // 搜索树\n      expand: true,\n      span: 18,\n      expandIcon: \"ios-arrow-back\",\n      selectNode: {},\n      treeData: [], // 树数据\n      selectCount: 0, // 多选计数\n      selectList: [], // 多选数据\n      searchForm: {\n        // 搜索框对应data对象\n        name: \"\",\n        status: \"\",\n        pageNumber: 1, // 当前页数\n        pageSize: 10, // 页面大小\n        sort: \"sortOrder\", // 默认排序字段\n        order: \"asc\" // 默认排序方式\n      },\n      modalType: 0, // 添加或编辑标识\n      modalVisible: false, // 添加或编辑显示\n      dictModalVisible: false,\n      dictModalTitle: \"\",\n      modalTitle: \"\", // 添加或编辑标题\n      dictForm: {\n        title: \"\",\n        type: \"\",\n        description: \"\",\n        sortOrder: 0\n      },\n      form: {\n        // 添加或编辑表单对象初始化数据\n        title: \"\",\n        value: \"\",\n        status: 0,\n        description: \"\",\n        sortOrder: 0\n      },\n      dictFormValidate: {\n        // 表单验证规则\n        title: [{ required: true, message: \"不能为空\", trigger: \"blur\" }],\n        type: [{ required: true, message: \"不能为空\", trigger: \"blur\" }],\n        sortOrder: [\n          {\n            required: true,\n            type: \"number\",\n            message: \"排序值不能为空\",\n            trigger: \"blur\"\n          }\n        ]\n      },\n      formValidate: {\n        // 表单验证规则\n        title: [{ required: true, message: \"不能为空\", trigger: \"blur\" }],\n        value: [{ required: true, message: \"不能为空\", trigger: \"blur\" }],\n        sortOrder: [\n          {\n            required: true,\n            type: \"number\",\n            message: \"排序值不能为空\",\n            trigger: \"blur\"\n          }\n        ]\n      },\n      columns: [\n        // 表头\n        {\n          type: \"selection\",\n          width: 60,\n          align: \"center\"\n        },\n        {\n          type: \"index\",\n          width: 60,\n          align: \"center\"\n        },\n        {\n          title: \"名称\",\n          key: \"title\",\n          minWidth: 150,\n          sortable: true\n        },\n        {\n          title: \"数据值\",\n          key: \"value\",\n          width: 150,\n          sortable: true\n        },\n        {\n          title: \"备注\",\n          key: \"description\",\n          width: 150,\n          sortable: true\n        },\n        {\n          title: \"排序值\",\n          key: \"sortOrder\",\n          width: 100,\n          sortable: true,\n          sortType: \"asc\"\n        },\n        {\n          title: \"状态\",\n          key: \"status\",\n          align: \"center\",\n          width: 130,\n          render: (h, params) => {\n            let re = \"\";\n            if (params.row.status == 0) {\n              return h(\"div\", [\n                h(\"Badge\", {\n                  props: {\n                    status: \"success\",\n                    text: \"正常启用\"\n                  }\n                })\n              ]);\n            } else if (params.row.status == -1) {\n              return h(\"div\", [\n                h(\"Badge\", {\n                  props: {\n                    status: \"error\",\n                    text: \"禁用\"\n                  }\n                })\n              ]);\n            }\n          }\n        },\n        {\n          title: \"创建时间\",\n          key: \"createTime\",\n          width: 250,\n          sortable: true\n        },\n        {\n          title: \"操作\",\n          key: \"action\",\n          width: 160,\n          align: \"center\",\n          fixed: \"right\",\n          render: (h, params) => {\n            return h(\"div\", [\n              h(\n                \"Button\",\n                {\n                  props: {\n                    type: \"primary\",\n                    size: \"small\"\n                  },\n                  style: {\n                    marginRight: \"5px\"\n                  },\n                  on: {\n                    click: () => {\n                      this.edit(params.row);\n                    }\n                  }\n                },\n                \"编辑\"\n              ),\n              h(\n                \"Button\",\n                {\n                  props: {\n                    type: \"error\",\n                    size: \"small\"\n                  },\n                  on: {\n                    click: () => {\n                      this.remove(params.row);\n                    }\n                  }\n                },\n                \"删除\"\n              )\n            ]);\n          }\n        }\n      ],\n      submitLoading: false, // 添加或编辑提交状态\n      data: [], //表单数据\n      total: 0 // 表单数据总数\n    };\n  },\n  methods: {\n    init() {\n      // 获取树数据\n      this.getAllDict();\n      // 获取表单数据\n      this.getDataList();\n    },\n    getAllDict() {\n      this.treeLoading = true;\n      getAllDictList().then(res => {\n        this.treeLoading = false;\n        if (res.success) {\n          this.treeData = res.result;\n        }\n      });\n    },\n    search() {\n      // 搜索树\n      if (this.searchKey) {\n        this.treeLoading = true;\n        searchDict({ key: this.searchKey }).then(res => {\n          this.treeLoading = false;\n          if (res.success) {\n            this.treeData = res.result;\n          }\n        });\n      } else {\n        // 为空重新加载\n        this.getAllDict();\n      }\n    },\n    selectTree(v) {\n      if (v.length > 0) {\n        this.$refs.dictForm.resetFields();\n        // 转换null为\"\"\n        for (let attr in v[0]) {\n          if (v[0][attr] == null) {\n            v[0][attr] = \"\";\n          }\n        }\n        let str = JSON.stringify(v[0]);\n        let data = JSON.parse(str);\n        this.selectNode = data;\n        this.dictForm = data;\n        this.editTitle = data.title + \"(\" + data.type + \")\";\n        // 重新加载表\n        this.searchForm.pageNumber = 1;\n        this.searchForm.pageSize = 10;\n        this.getDataList();\n      } else {\n        this.cancelEdit();\n      }\n    },\n    cancelEdit() {\n      let data = this.$refs.tree.getSelectedNodes()[0];\n      if (data) {\n        data.selected = false;\n      }\n      // 取消选择后获取全部数据\n      this.selectNode = {};\n      this.editTitle = \"\";\n      this.getDataList();\n    },\n    changeSelect(v) {\n      this.selectCount = v.length;\n      this.selectList = v;\n    },\n    changeExpand() {\n      this.expand = !this.expand;\n      if (this.expand) {\n        this.expandIcon = \"ios-arrow-back\";\n        this.span = 18;\n      } else {\n        this.expandIcon = \"ios-arrow-forward\";\n        this.span = 23;\n      }\n    },\n    changePage(v) {\n      this.searchForm.pageNumber = v;\n      this.getDataList();\n      this.clearSelectAll();\n    },\n    changePageSize(v) {\n      this.searchForm.pageSize = v;\n      this.getDataList();\n    },\n    getDataList() {\n      this.loading = true;\n      if (this.selectNode.id) {\n        this.searchForm.dictId = this.selectNode.id;\n      } else {\n        delete this.searchForm.dictId;\n      }\n      if (!this.searchForm.status) {\n        this.searchForm.status = \"\";\n      }\n      getAllDictDataList(this.searchForm).then(res => {\n        this.loading = false;\n        if (res.success) {\n          this.data = res.result.content;\n          this.total = res.result.totalElements;\n        }\n      });\n    },\n    handleSearch() {\n      this.searchForm.pageNumber = 1;\n      this.searchForm.pageSize = 10;\n      this.getDataList();\n    },\n    handleReset() {\n      this.$refs.searchForm.resetFields();\n      this.searchForm.pageNumber = 1;\n      this.searchForm.pageSize = 10;\n      // 重新加载数据\n      this.getDataList();\n    },\n    changeSort(e) {\n      this.searchForm.sort = e.key;\n      this.searchForm.order = e.order;\n      if (e.order == \"normal\") {\n        this.searchForm.order = \"\";\n      }\n      this.getDataList();\n    },\n    showSelect(e) {\n      this.selectList = e;\n      this.selectCount = e.length;\n    },\n    clearSelectAll() {\n      this.$refs.table.selectAll(false);\n    },\n    refreshDict() {\n      this.getAllDict();\n      this.selectNode = {};\n      this.editTitle = \"\";\n      this.getDataList();\n    },\n    handleDropdown(name) {\n      if (name == \"editDcit\") {\n        if (!this.selectNode.id) {\n          this.$Message.warning(\"您还未选择要编辑的字典\");\n          return;\n        }\n        this.editDcit();\n      } else if (name == \"delDcit\") {\n        this.delDcit();\n      } else if (name == \"refreshDcit\") {\n        this.refreshDict();\n      }\n    },\n    addDcit() {\n      this.modalType = 0;\n      this.dictModalTitle = \"添加字典\";\n      this.$refs.dictForm.resetFields();\n      this.dictModalVisible = true;\n    },\n    editDcit() {\n      this.modalType = 1;\n      this.dictModalTitle = \"编辑字典\";\n      this.dictModalVisible = true;\n    },\n    delDcit() {\n      if (!this.selectNode.id) {\n        this.$Message.warning(\"您还未选择要删除的字典\");\n        return;\n      }\n      this.$Modal.confirm({\n        title: \"确认删除\",\n        loading: true,\n        content: \"您确认要删除 \" + this.selectNode.title + \" ?\",\n        onOk: () => {\n          // 删除\n          deleteDict({ids: this.selectNode.id}).then(res => {\n            this.$Modal.remove();\n            if (res.success) {\n              this.$Message.success(\"操作成功\");\n              this.refreshDict();\n            }\n          });\n        }\n      });\n    },\n    add() {\n      if (!this.selectNode.id) {\n        this.$Message.warning(\"请先选择一个字典类别\");\n        return;\n      }\n      this.modalType = 0;\n      this.modalTitle = \"添加字典 \" + this.editTitle + \" 的数据\";\n      this.$refs.form.resetFields();\n      this.modalVisible = true;\n    },\n    edit(v) {\n      this.modalType = 1;\n      this.modalTitle = \"编辑字典 \" + this.editTitle + \" 的数据\";\n      this.$refs.form.resetFields();\n      // 转换null为\"\"\n      for (let attr in v) {\n        if (v[attr] == null) {\n          v[attr] = \"\";\n        }\n      }\n      let str = JSON.stringify(v);\n      let data = JSON.parse(str);\n      this.form = data;\n      this.modalVisible = true;\n    },\n    handelSubmitDict() {\n      this.$refs.dictForm.validate(valid => {\n        if (valid) {\n          this.submitLoading = true;\n          if (this.modalType == 0) {\n            // 添加 避免编辑后传入id等数据 记得删除\n            delete this.dictForm.id;\n            addDict(this.dictForm).then(res => {\n              this.submitLoading = false;\n              if (res.success) {\n                this.$Message.success(\"操作成功\");\n                this.getAllDict();\n                this.dictModalVisible = false;\n              }\n            });\n          } else if (this.modalType == 1) {\n            // 编辑\n            editDict(this.dictForm).then(res => {\n              this.submitLoading = false;\n              if (res.success) {\n                this.$Message.success(\"操作成功\");\n                this.getAllDict();\n                this.dictModalVisible = false;\n              }\n            });\n          }\n        }\n      });\n    },\n    handelSubmit() {\n      this.$refs.form.validate(valid => {\n        if (valid) {\n          this.submitLoading = true;\n          if (this.modalType == 0) {\n            // 添加 避免编辑后传入id等数据 记得删除\n            delete this.form.id;\n            this.form.dictId = this.selectNode.id;\n            addDictData(this.form).then(res => {\n              this.submitLoading = false;\n              if (res.success) {\n                this.$Message.success(\"操作成功\");\n                this.getDataList();\n                this.modalVisible = false;\n              }\n            });\n          } else if (this.modalType == 1) {\n            // 编辑\n            editDictData(this.form).then(res => {\n              this.submitLoading = false;\n              if (res.success) {\n                this.$Message.success(\"操作成功\");\n                this.getDataList();\n                this.modalVisible = false;\n              }\n            });\n          }\n        }\n      });\n    },\n    remove(v) {\n      this.$Modal.confirm({\n        title: \"确认删除\",\n        content: \"您确认要删除 \" + v.title + \" ?\",\n        loading: true,\n        onOk: () => {\n          // 删除\n          deleteData({ids: v.id}).then(res => {\n            this.$Modal.remove();\n            if (res.success) {\n              this.$Message.success(\"操作成功\");\n              this.getDataList();\n            }\n          });\n        }\n      });\n    },\n    delAll() {\n      if (this.selectCount <= 0) {\n        this.$Message.warning(\"您还未选择要删除的数据\");\n        return;\n      }\n      this.$Modal.confirm({\n        title: \"确认删除\",\n        content: \"您确认要删除所选的 \" + this.selectCount + \" 条数据?\",\n        loading: true,\n        onOk: () => {\n          let ids = \"\";\n          this.selectList.forEach(function(e) {\n            ids += e.id + \",\";\n          });\n          ids = ids.substring(0, ids.length - 1);\n          // 批量删除\n          deleteData({ids: ids}).then(res => {\n            this.$Modal.remove();\n            if (res.success) {\n              this.$Message.success(\"操作成功\");\n              this.clearSelectAll();\n              this.getDataList();\n            }\n          });\n        }\n      });\n    }\n  },\n  mounted() {\n    // 计算高度\n    let height = document.documentElement.clientHeight;\n    this.maxHeight = Number(height - 287) + \"px\";\n    this.init();\n  }\n};\n</script>"],"sourceRoot":"src/views/sys/dict-manage"}]}