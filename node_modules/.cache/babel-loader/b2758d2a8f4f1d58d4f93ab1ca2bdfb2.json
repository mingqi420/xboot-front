{"remainingRequest":"D:\\dove\\project\\xboot\\xboot-front-master\\node_modules\\babel-loader\\lib\\index.js!D:\\dove\\project\\xboot\\xboot-front-master\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\dove\\project\\xboot\\xboot-front-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\dove\\project\\xboot\\xboot-front-master\\src\\views\\my-components\\xboot\\upload-pic-thumb.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\dove\\project\\xboot\\xboot-front-master\\src\\views\\my-components\\xboot\\upload-pic-thumb.vue","mtime":1600218271000},{"path":"D:\\dove\\project\\xboot\\xboot-front-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\dove\\project\\xboot\\xboot-front-master\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\dove\\project\\xboot\\xboot-front-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\dove\\project\\xboot\\xboot-front-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgIkBiYWJlbC9oZWxwZXJzIC0gdHlwZW9mIjsgaWYgKHR5cGVvZiBTeW1ib2wgPT09ICJmdW5jdGlvbiIgJiYgdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA9PT0gInN5bWJvbCIpIHsgX3R5cGVvZiA9IGZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7IHJldHVybiB0eXBlb2Ygb2JqOyB9OyB9IGVsc2UgeyBfdHlwZW9mID0gZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgcmV0dXJuIG9iaiAmJiB0eXBlb2YgU3ltYm9sID09PSAiZnVuY3Rpb24iICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG9iaiAhPT0gU3ltYm9sLnByb3RvdHlwZSA/ICJzeW1ib2wiIDogdHlwZW9mIG9iajsgfTsgfSByZXR1cm4gX3R5cGVvZihvYmopOyB9CgovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgInZpZXdlcmpzL2Rpc3Qvdmlld2VyLmNzcyI7CmltcG9ydCBWaWV3ZXIgZnJvbSAidmlld2VyanMiOwppbXBvcnQgeyB1cGxvYWRGaWxlIH0gZnJvbSAiQC9hcGkvaW5kZXgiOwppbXBvcnQgdnVlZHJhZ2dhYmxlIGZyb20gInZ1ZWRyYWdnYWJsZSI7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAidXBsb2FkUGljVGh1bWIiLAogIGNvbXBvbmVudHM6IHsKICAgIHZ1ZWRyYWdnYWJsZTogdnVlZHJhZ2dhYmxlCiAgfSwKICBwcm9wczogewogICAgdmFsdWU6IHsKICAgICAgdHlwZTogbnVsbAogICAgfSwKICAgIGRyYWdnYWJsZTogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0OiB0cnVlCiAgICB9LAogICAgbXVsdGlwbGU6IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgZGVmYXVsdDogdHJ1ZQogICAgfSwKICAgIG1heFNpemU6IHsKICAgICAgdHlwZTogTnVtYmVyLAogICAgICBkZWZhdWx0OiA1CiAgICB9LAogICAgbGltaXQ6IHsKICAgICAgdHlwZTogTnVtYmVyLAogICAgICBkZWZhdWx0OiAxMAogICAgfSwKICAgIHdpZHRoOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogIjYwcHgiCiAgICB9LAogICAgaGVpZ2h0OiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogIjYwcHgiCiAgICB9LAogICAgYWNjZXB0OiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogIi5qcGcsIC5qcGVnLCAucG5nLCAuZ2lmIgogICAgfQogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIGZvcm1hdDogZnVuY3Rpb24gZm9ybWF0KCkgewogICAgICBpZiAodGhpcy5hY2NlcHQpIHsKICAgICAgICB2YXIgZm9ybWF0ID0gW107CiAgICAgICAgdGhpcy5hY2NlcHQuc3BsaXQoIiwiKS5mb3JFYWNoKGZ1bmN0aW9uIChlKSB7CiAgICAgICAgICBmb3JtYXQucHVzaChlLnJlcGxhY2UoIi4iLCAiIikucmVwbGFjZSgiICIsICIiKSk7CiAgICAgICAgfSk7CiAgICAgICAgcmV0dXJuIGZvcm1hdDsKICAgICAgfSBlbHNlIHsKICAgICAgICByZXR1cm4gW107CiAgICAgIH0KICAgIH0KICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBhY2Nlc3NUb2tlbjoge30sCiAgICAgIHVwbG9hZEZpbGVVcmw6IHVwbG9hZEZpbGUsCiAgICAgIHVwbG9hZExpc3Q6IFtdCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgb25FbmQ6IGZ1bmN0aW9uIG9uRW5kKCkgewogICAgICB0aGlzLnJldHVyblZhbHVlKCk7CiAgICB9LAogICAgaW5pdDogZnVuY3Rpb24gaW5pdCgpIHsKICAgICAgdGhpcy5zZXREYXRhKHRoaXMudmFsdWUsIHRydWUpOwogICAgICB0aGlzLmFjY2Vzc1Rva2VuID0gewogICAgICAgIGFjY2Vzc1Rva2VuOiB0aGlzLmdldFN0b3JlKCJhY2Nlc3NUb2tlbiIpCiAgICAgIH07CiAgICB9LAogICAgaGFuZGxlVmlldzogZnVuY3Rpb24gaGFuZGxlVmlldyh2LCBpKSB7CiAgICAgIHZhciBpbWFnZSA9IG5ldyBJbWFnZSgpOwogICAgICBpbWFnZS5zcmMgPSB2OwogICAgICB2YXIgdmlld2VyID0gbmV3IFZpZXdlcihpbWFnZSwgewogICAgICAgIGhpZGRlbjogZnVuY3Rpb24gaGlkZGVuKCkgewogICAgICAgICAgdmlld2VyLmRlc3Ryb3koKTsKICAgICAgICB9CiAgICAgIH0pOwogICAgICB2aWV3ZXIuc2hvdygpOwogICAgfSwKICAgIGhhbmRsZVJlbW92ZTogZnVuY3Rpb24gaGFuZGxlUmVtb3ZlKGZpbGUpIHsKICAgICAgdmFyIHVwbG9hZExpc3QgPSB0aGlzLnVwbG9hZExpc3Q7CiAgICAgIHRoaXMudXBsb2FkTGlzdC5zcGxpY2UodXBsb2FkTGlzdC5pbmRleE9mKGZpbGUpLCAxKTsKICAgICAgdGhpcy5yZXR1cm5WYWx1ZSgpOwogICAgfSwKICAgIGhhbmRsZVN1Y2Nlc3M6IGZ1bmN0aW9uIGhhbmRsZVN1Y2Nlc3MocmVzLCBmaWxlKSB7CiAgICAgIGlmIChyZXMuc3VjY2VzcykgewogICAgICAgIGZpbGUudXJsID0gcmVzLnJlc3VsdDsgLy8g5Y2V5byg5Zu+54mH5aSE55CGCgogICAgICAgIGlmICghdGhpcy5tdWx0aXBsZSAmJiB0aGlzLnVwbG9hZExpc3QubGVuZ3RoID4gMCkgewogICAgICAgICAgLy8g5Yig6Zmk56ys5LiA5bygCiAgICAgICAgICB0aGlzLnVwbG9hZExpc3Quc3BsaWNlKDAsIDEpOwogICAgICAgIH0KCiAgICAgICAgdGhpcy51cGxvYWRMaXN0LnB1c2goZmlsZSk7IC8vIOi/lOWbnue7hOS7tuWAvAoKICAgICAgICB0aGlzLnJldHVyblZhbHVlKCk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy4kTWVzc2FnZS5lcnJvcihyZXMubWVzc2FnZSk7CiAgICAgIH0KICAgIH0sCiAgICBoYW5kbGVFcnJvcjogZnVuY3Rpb24gaGFuZGxlRXJyb3IoZXJyb3IsIGZpbGUsIGZpbGVMaXN0KSB7CiAgICAgIHRoaXMuJE1lc3NhZ2UuZXJyb3IoZXJyb3IudG9TdHJpbmcoKSk7CiAgICB9LAogICAgaGFuZGxlRm9ybWF0RXJyb3I6IGZ1bmN0aW9uIGhhbmRsZUZvcm1hdEVycm9yKGZpbGUpIHsKICAgICAgdGhpcy4kTm90aWNlLndhcm5pbmcoewogICAgICAgIHRpdGxlOiAi5LiN5pSv5oyB55qE5paH5Lu25qC85byPIiwKICAgICAgICBkZXNjOiAi5omA6YCJ5paH5Lu24oCYICIgKyBmaWxlLm5hbWUgKyAiIOKAmeagvOW8j+S4jeato+ehriwg6K+36YCJ5oupICIgKyB0aGlzLmFjY2VwdCArICIg5Zu+54mH5qC85byP5paH5Lu2IgogICAgICB9KTsKICAgIH0sCiAgICBoYW5kbGVNYXhTaXplOiBmdW5jdGlvbiBoYW5kbGVNYXhTaXplKGZpbGUpIHsKICAgICAgdGhpcy4kTm90aWNlLndhcm5pbmcoewogICAgICAgIHRpdGxlOiAi5paH5Lu25aSn5bCP6L+H5aSnIiwKICAgICAgICBkZXNjOiAi5omA6YCJ5paH5Lu24oCYICIgKyBmaWxlLm5hbWUgKyAiIOKAmeWkp+Wwj+i/h+Wkpywg5LiN5b6X6LaF6L+HICIgKyB0aGlzLm1heFNpemUgKyAiTS4iCiAgICAgIH0pOwogICAgfSwKICAgIGhhbmRsZUJlZm9yZVVwbG9hZDogZnVuY3Rpb24gaGFuZGxlQmVmb3JlVXBsb2FkKCkgewogICAgICBpZiAodGhpcy5tdWx0aXBsZSAmJiB0aGlzLnVwbG9hZExpc3QubGVuZ3RoID49IHRoaXMubGltaXQpIHsKICAgICAgICB0aGlzLiRNZXNzYWdlLndhcm5pbmcoIuacgOWkmuWPquiDveS4iuS8oCIgKyB0aGlzLmxpbWl0ICsgIuW8oOWbvueJhyIpOwogICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgfQoKICAgICAgcmV0dXJuIHRydWU7CiAgICB9LAogICAgcmV0dXJuVmFsdWU6IGZ1bmN0aW9uIHJldHVyblZhbHVlKCkgewogICAgICBpZiAoIXRoaXMudXBsb2FkTGlzdCB8fCB0aGlzLnVwbG9hZExpc3QubGVuZ3RoIDwgMSkgewogICAgICAgIGlmICghdGhpcy5tdWx0aXBsZSkgewogICAgICAgICAgdGhpcy4kZW1pdCgiaW5wdXQiLCAiIik7CiAgICAgICAgICB0aGlzLiRlbWl0KCJvbi1jaGFuZ2UiLCAiIik7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHRoaXMuJGVtaXQoImlucHV0IiwgW10pOwogICAgICAgICAgdGhpcy4kZW1pdCgib24tY2hhbmdlIiwgW10pOwogICAgICAgIH0KCiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICBpZiAoIXRoaXMubXVsdGlwbGUpIHsKICAgICAgICAvLyDljZXlvKAKICAgICAgICB2YXIgdiA9IHRoaXMudXBsb2FkTGlzdFswXS51cmw7CiAgICAgICAgdGhpcy4kZW1pdCgiaW5wdXQiLCB2KTsKICAgICAgICB0aGlzLiRlbWl0KCJvbi1jaGFuZ2UiLCB2KTsKICAgICAgfSBlbHNlIHsKICAgICAgICB2YXIgX3YgPSBbXTsKICAgICAgICB0aGlzLnVwbG9hZExpc3QuZm9yRWFjaChmdW5jdGlvbiAoZSkgewogICAgICAgICAgX3YucHVzaChlLnVybCk7CiAgICAgICAgfSk7CiAgICAgICAgdGhpcy4kZW1pdCgiaW5wdXQiLCBfdik7CiAgICAgICAgdGhpcy4kZW1pdCgib24tY2hhbmdlIiwgX3YpOwogICAgICB9CiAgICB9LAogICAgc2V0RGF0YTogZnVuY3Rpb24gc2V0RGF0YSh2LCBpbml0KSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICBpZiAodHlwZW9mIHYgPT0gInN0cmluZyIpIHsKICAgICAgICAvLyDljZXlvKAKICAgICAgICBpZiAodGhpcy5tdWx0aXBsZSkgewogICAgICAgICAgdGhpcy4kTWVzc2FnZS53YXJuaW5nKCLlpJrlvKDkuIrkvKDku4XmlK/mjIHmlbDnu4TmlbDmja7nsbvlnosiKTsKICAgICAgICAgIHJldHVybjsKICAgICAgICB9CgogICAgICAgIGlmICghdikgewogICAgICAgICAgcmV0dXJuOwogICAgICAgIH0KCiAgICAgICAgdGhpcy51cGxvYWRMaXN0ID0gW107CiAgICAgICAgdmFyIGl0ZW0gPSB7CiAgICAgICAgICB1cmw6IHYsCiAgICAgICAgICBzdGF0dXM6ICJmaW5pc2hlZCIKICAgICAgICB9OwogICAgICAgIHRoaXMudXBsb2FkTGlzdC5wdXNoKGl0ZW0pOwogICAgICAgIHRoaXMuJGVtaXQoIm9uLWNoYW5nZSIsIHYpOwogICAgICB9IGVsc2UgaWYgKF90eXBlb2YodikgPT0gIm9iamVjdCIpIHsKICAgICAgICAvLyDlpJrlvKAKICAgICAgICBpZiAoIXRoaXMubXVsdGlwbGUpIHsKICAgICAgICAgIHRoaXMuJE1lc3NhZ2Uud2FybmluZygi5Y2V5byg5LiK5Lyg5LuF5pSv5oyB5a2X56ym5Liy5pWw5o2u57G75Z6LIik7CiAgICAgICAgICByZXR1cm47CiAgICAgICAgfQoKICAgICAgICB0aGlzLnVwbG9hZExpc3QgPSBbXTsKCiAgICAgICAgaWYgKHYubGVuZ3RoID4gdGhpcy5saW1pdCkgewogICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLmxpbWl0OyBpKyspIHsKICAgICAgICAgICAgdmFyIF9pdGVtID0gewogICAgICAgICAgICAgIHVybDogdltpXSwKICAgICAgICAgICAgICBzdGF0dXM6ICJmaW5pc2hlZCIKICAgICAgICAgICAgfTsKICAgICAgICAgICAgdGhpcy51cGxvYWRMaXN0LnB1c2goX2l0ZW0pOwogICAgICAgICAgfQoKICAgICAgICAgIHRoaXMuJGVtaXQoIm9uLWNoYW5nZSIsIHYuc2xpY2UoMCwgdGhpcy5saW1pdCkpOwoKICAgICAgICAgIGlmIChpbml0KSB7CiAgICAgICAgICAgIHRoaXMuJGVtaXQoImlucHV0Iiwgdi5zbGljZSgwLCB0aGlzLmxpbWl0KSk7CiAgICAgICAgICB9CgogICAgICAgICAgdGhpcy4kTWVzc2FnZS53YXJuaW5nKCLmnIDlpJrlj6rog73kuIrkvKAiICsgdGhpcy5saW1pdCArICLlvKDlm77niYciKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgdi5mb3JFYWNoKGZ1bmN0aW9uIChlKSB7CiAgICAgICAgICAgIHZhciBpdGVtID0gewogICAgICAgICAgICAgIHVybDogZSwKICAgICAgICAgICAgICBzdGF0dXM6ICJmaW5pc2hlZCIKICAgICAgICAgICAgfTsKCiAgICAgICAgICAgIF90aGlzLnVwbG9hZExpc3QucHVzaChpdGVtKTsKICAgICAgICAgIH0pOwogICAgICAgICAgdGhpcy4kZW1pdCgib24tY2hhbmdlIiwgdik7CiAgICAgICAgfQogICAgICB9CiAgICB9CiAgfSwKICB3YXRjaDogewogICAgdmFsdWU6IGZ1bmN0aW9uIHZhbHVlKHZhbCkgewogICAgICB0aGlzLnNldERhdGEodmFsKTsKICAgIH0KICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB0aGlzLmluaXQoKTsKICB9Cn07"},{"version":3,"sources":["upload-pic-thumb.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"upload-thumb\">\n    <vuedraggable\n      :list=\"uploadList\"\n      :disabled=\"!draggable||!multiple\"\n      :animation=\"200\"\n      class=\"list-group\"\n      ghost-class=\"thumb-ghost\"\n      @end=\"onEnd\"\n    >\n      <div\n        class=\"upload-list\"\n        :style=\"{width: `calc(${width} + 2px)`, height: `calc(${height} + 2px)`, lineHeight: height}\"\n        v-for=\"(item, index) in uploadList\"\n        :key=\"index\"\n      >\n        <div v-if=\"item.status == 'finished'\">\n          <img :src=\"item.url\" :style=\"{height: height}\" />\n          <div class=\"upload-list-cover\">\n            <Icon type=\"ios-eye-outline\" @click=\"handleView(item.url, index)\"></Icon>\n            <Icon type=\"ios-trash-outline\" @click=\"handleRemove(item)\"></Icon>\n          </div>\n        </div>\n        <div v-else>\n          <Progress v-if=\"item.showProgress\" :percent=\"item.percentage\" hide-info></Progress>\n        </div>\n      </div>\n    </vuedraggable>\n    <Upload\n      ref=\"upload\"\n      :multiple=\"multiple\"\n      :show-upload-list=\"false\"\n      :on-success=\"handleSuccess\"\n      :on-error=\"handleError\"\n      :format=\"format\"\n      :accept=\"accept\"\n      :max-size=\"maxSize*1024\"\n      :on-format-error=\"handleFormatError\"\n      :on-exceeded-size=\"handleMaxSize\"\n      :before-upload=\"handleBeforeUpload\"\n      type=\"drag\"\n      :action=\"uploadFileUrl\"\n      :headers=\"accessToken\"\n      class=\"upload-btn\"\n      :style=\"{width: width}\"\n    >\n      <div class=\"upload-camera\" :style=\"{width: width, height: height, lineHeight: height}\">\n        <Icon type=\"md-camera\" size=\"20\"></Icon>\n      </div>\n    </Upload>\n  </div>\n</template>\n\n<script>\nimport \"viewerjs/dist/viewer.css\";\nimport Viewer from \"viewerjs\";\nimport { uploadFile } from \"@/api/index\";\nimport vuedraggable from \"vuedraggable\";\nexport default {\n  name: \"uploadPicThumb\",\n  components: {\n    vuedraggable\n  },\n  props: {\n    value: {\n      type: null\n    },\n    draggable: {\n      type: Boolean,\n      default: true\n    },\n    multiple: {\n      type: Boolean,\n      default: true\n    },\n    maxSize: {\n      type: Number,\n      default: 5\n    },\n    limit: {\n      type: Number,\n      default: 10\n    },\n    width: {\n      type: String,\n      default: \"60px\"\n    },\n    height: {\n      type: String,\n      default: \"60px\"\n    },\n    accept: {\n      type: String,\n      default: \".jpg, .jpeg, .png, .gif\"\n    }\n  },\n  computed: {\n    format() {\n      if (this.accept) {\n        let format = [];\n        this.accept.split(\",\").forEach(e => {\n          format.push(e.replace(\".\", \"\").replace(\" \", \"\"));\n        });\n        return format;\n      } else {\n        return [];\n      }\n    }\n  },\n  data() {\n    return {\n      accessToken: {},\n      uploadFileUrl: uploadFile,\n      uploadList: []\n    };\n  },\n  methods: {\n    onEnd() {\n      this.returnValue();\n    },\n    init() {\n      this.setData(this.value, true);\n      this.accessToken = {\n        accessToken: this.getStore(\"accessToken\")\n      };\n    },\n    handleView(v, i) {\n      let image = new Image();\n      image.src = v;\n      let viewer = new Viewer(image, {\n        hidden: function() {\n          viewer.destroy();\n        }\n      });\n      viewer.show();\n    },\n    handleRemove(file) {\n      const uploadList = this.uploadList;\n      this.uploadList.splice(uploadList.indexOf(file), 1);\n      this.returnValue();\n    },\n    handleSuccess(res, file) {\n      if (res.success) {\n        file.url = res.result;\n        // 单张图片处理\n        if (!this.multiple && this.uploadList.length > 0) {\n          // 删除第一张\n          this.uploadList.splice(0, 1);\n        }\n        this.uploadList.push(file);\n        // 返回组件值\n        this.returnValue();\n      } else {\n        this.$Message.error(res.message);\n      }\n    },\n    handleError(error, file, fileList) {\n      this.$Message.error(error.toString());\n    },\n    handleFormatError(file) {\n      this.$Notice.warning({\n        title: \"不支持的文件格式\",\n        desc:\n          \"所选文件‘ \" +\n          file.name +\n          \" ’格式不正确, 请选择 \" +\n          this.accept +\n          \" 图片格式文件\"\n      });\n    },\n    handleMaxSize(file) {\n      this.$Notice.warning({\n        title: \"文件大小过大\",\n        desc:\n          \"所选文件‘ \" +\n          file.name +\n          \" ’大小过大, 不得超过 \" +\n          this.maxSize +\n          \"M.\"\n      });\n    },\n    handleBeforeUpload() {\n      if (this.multiple && this.uploadList.length >= this.limit) {\n        this.$Message.warning(\"最多只能上传\" + this.limit + \"张图片\");\n        return false;\n      }\n      return true;\n    },\n    returnValue() {\n      if (!this.uploadList || this.uploadList.length < 1) {\n        if (!this.multiple) {\n          this.$emit(\"input\", \"\");\n          this.$emit(\"on-change\", \"\");\n        } else {\n          this.$emit(\"input\", []);\n          this.$emit(\"on-change\", []);\n        }\n        return;\n      }\n      if (!this.multiple) {\n        // 单张\n        let v = this.uploadList[0].url;\n        this.$emit(\"input\", v);\n        this.$emit(\"on-change\", v);\n      } else {\n        let v = [];\n        this.uploadList.forEach(e => {\n          v.push(e.url);\n        });\n        this.$emit(\"input\", v);\n        this.$emit(\"on-change\", v);\n      }\n    },\n    setData(v, init) {\n      if (typeof v == \"string\") {\n        // 单张\n        if (this.multiple) {\n          this.$Message.warning(\"多张上传仅支持数组数据类型\");\n          return;\n        }\n        if (!v) {\n          return;\n        }\n        this.uploadList = [];\n        let item = {\n          url: v,\n          status: \"finished\"\n        };\n        this.uploadList.push(item);\n        this.$emit(\"on-change\", v);\n      } else if (typeof v == \"object\") {\n        // 多张\n        if (!this.multiple) {\n          this.$Message.warning(\"单张上传仅支持字符串数据类型\");\n          return;\n        }\n        this.uploadList = [];\n        if (v.length > this.limit) {\n          for (let i = 0; i < this.limit; i++) {\n            let item = {\n              url: v[i],\n              status: \"finished\"\n            };\n            this.uploadList.push(item);\n          }\n          this.$emit(\"on-change\", v.slice(0, this.limit));\n          if (init) {\n            this.$emit(\"input\", v.slice(0, this.limit));\n          }\n          this.$Message.warning(\"最多只能上传\" + this.limit + \"张图片\");\n        } else {\n          v.forEach(e => {\n            let item = {\n              url: e,\n              status: \"finished\"\n            };\n            this.uploadList.push(item);\n          });\n          this.$emit(\"on-change\", v);\n        }\n      }\n    }\n  },\n  watch: {\n    value(val) {\n      this.setData(val);\n    }\n  },\n  mounted() {\n    this.init();\n  }\n};\n</script>\n\n<style lang=\"less\">\n.upload-thumb {\n  display: flex;\n  align-items: center;\n  flex-wrap: wrap;\n  .upload-list {\n    display: inline-block;\n    text-align: center;\n    border: 1px solid transparent;\n    border-radius: 4px;\n    overflow: hidden;\n    background: #fff;\n    position: relative;\n    box-shadow: 0 1px 1px rgba(0, 0, 0, 0.2);\n    margin-right: 8px;\n  }\n  .upload-list img {\n    object-fit: cover;\n  }\n  .upload-btn {\n    display: inline-block;\n  }\n  .upload-list-cover {\n    display: none;\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    background: rgba(0, 0, 0, 0.6);\n  }\n  .upload-list:hover .upload-list-cover {\n    display: block;\n  }\n  .upload-list-cover i {\n    color: #fff;\n    font-size: 20px;\n    cursor: pointer;\n    margin: 0 2px;\n  }\n  .list-group {\n    display: inline-block;\n  }\n  .thumb-ghost {\n    opacity: 0.5;\n    background: #c8ebfb;\n  }\n}\n</style>\n\n"],"sourceRoot":"src/views/my-components/xboot"}]}