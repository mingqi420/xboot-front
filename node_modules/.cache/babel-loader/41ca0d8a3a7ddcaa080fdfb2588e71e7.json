{"remainingRequest":"D:\\dove\\project\\xboot\\xboot-front-master\\node_modules\\babel-loader\\lib\\index.js!D:\\dove\\project\\xboot\\xboot-front-master\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\dove\\project\\xboot\\xboot-front-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\dove\\project\\xboot\\xboot-front-master\\src\\views\\sys\\redis\\redisMonitor.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\dove\\project\\xboot\\xboot-front-master\\src\\views\\sys\\redis\\redisMonitor.vue","mtime":1600218271000},{"path":"D:\\dove\\project\\xboot\\xboot-front-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\dove\\project\\xboot\\xboot-front-master\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\dove\\project\\xboot\\xboot-front-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\dove\\project\\xboot\\xboot-front-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsgZ2V0UmVkaXNLZXlTaXplLCBnZXRSZWRpc01lbW9yeSwgZ2V0UmVkaXNJbmZvIH0gZnJvbSAiQC9hcGkvaW5kZXgiOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogInJlZGlzTW9uaXRvciIsCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIG1lbW9yeTogewogICAgICAgIHNlcmllczogW10sCiAgICAgICAgY2hhcnRPcHRpb25zOiB7CiAgICAgICAgICBjaGFydDogewogICAgICAgICAgICBhbmltYXRpb25zOiB7CiAgICAgICAgICAgICAgZW5hYmxlZDogdHJ1ZSwKICAgICAgICAgICAgICBlYXNpbmc6ICJsaW5lYXIiLAogICAgICAgICAgICAgIGR5bmFtaWNBbmltYXRpb246IHsKICAgICAgICAgICAgICAgIHNwZWVkOiA1MDAwCiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LAogICAgICAgICAgICB0b29sYmFyOiB7CiAgICAgICAgICAgICAgc2hvdzogZmFsc2UKICAgICAgICAgICAgfSwKICAgICAgICAgICAgem9vbTogewogICAgICAgICAgICAgIGVuYWJsZWQ6IGZhbHNlCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICBkYXRhTGFiZWxzOiB7CiAgICAgICAgICAgIGVuYWJsZWQ6IGZhbHNlCiAgICAgICAgICB9LAogICAgICAgICAgc3Ryb2tlOiB7CiAgICAgICAgICAgIGN1cnZlOiAic21vb3RoIgogICAgICAgICAgfSwKICAgICAgICAgIHRpdGxlOiB7CiAgICAgICAgICAgIHRleHQ6ICJSZWRpc+WGheWtmOWunuaXtuWNoOeUqOaDheWGte+8iEtC77yJIiwKICAgICAgICAgICAgYWxpZ246ICJsZWZ0IgogICAgICAgICAgfSwKICAgICAgICAgIG1hcmtlcnM6IHsKICAgICAgICAgICAgc2l6ZTogMAogICAgICAgICAgfSwKICAgICAgICAgIHhheGlzOiB7fSwKICAgICAgICAgIHlheGlzOiB7fSwKICAgICAgICAgIGxlZ2VuZDogewogICAgICAgICAgICBzaG93OiBmYWxzZQogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgZGF0YTogW10sCiAgICAgICAgeGRhdGE6IFtdCiAgICAgIH0sCiAgICAgIGtleTogewogICAgICAgIHNlcmllczogW10sCiAgICAgICAgY2hhcnRPcHRpb25zOiB7CiAgICAgICAgICBjaGFydDogewogICAgICAgICAgICBhbmltYXRpb25zOiB7CiAgICAgICAgICAgICAgZW5hYmxlZDogdHJ1ZSwKICAgICAgICAgICAgICBlYXNpbmc6ICJsaW5lYXIiLAogICAgICAgICAgICAgIGR5bmFtaWNBbmltYXRpb246IHsKICAgICAgICAgICAgICAgIHNwZWVkOiA1MDAwCiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LAogICAgICAgICAgICB0b29sYmFyOiB7CiAgICAgICAgICAgICAgc2hvdzogZmFsc2UKICAgICAgICAgICAgfSwKICAgICAgICAgICAgem9vbTogewogICAgICAgICAgICAgIGVuYWJsZWQ6IGZhbHNlCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICBkYXRhTGFiZWxzOiB7CiAgICAgICAgICAgIGVuYWJsZWQ6IGZhbHNlCiAgICAgICAgICB9LAogICAgICAgICAgY29sb3JzOiBbIiNmNTU2NGUiXSwKICAgICAgICAgIHN0cm9rZTogewogICAgICAgICAgICBjdXJ2ZTogInNtb290aCIKICAgICAgICAgIH0sCiAgICAgICAgICB0aXRsZTogewogICAgICAgICAgICB0ZXh0OiAiUmVkaXMga2V55a6e5pe25pWw6YeP77yI5Liq77yJIiwKICAgICAgICAgICAgYWxpZ246ICJsZWZ0IgogICAgICAgICAgfSwKICAgICAgICAgIG1hcmtlcnM6IHsKICAgICAgICAgICAgc2l6ZTogMAogICAgICAgICAgfSwKICAgICAgICAgIHhheGlzOiB7fSwKICAgICAgICAgIHlheGlzOiB7fSwKICAgICAgICAgIGxlZ2VuZDogewogICAgICAgICAgICBzaG93OiBmYWxzZQogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgZGF0YTogW10sCiAgICAgICAgeGRhdGE6IFtdCiAgICAgIH0sCiAgICAgIGNvbHVtbnM6IFt7CiAgICAgICAga2V5OiAia2V5IiwKICAgICAgICBtaW5XaWR0aDogMjAwCiAgICAgIH0sIHsKICAgICAgICBrZXk6ICJkZXNjcmlwdGlvbiIsCiAgICAgICAgbWluV2lkdGg6IDUwMAogICAgICB9LCB7CiAgICAgICAga2V5OiAidmFsdWUiLAogICAgICAgIHdpZHRoOiA0MDAKICAgICAgfV0sCiAgICAgIHJlZGlzSW5mbzogW10sCiAgICAgIHRpbWVyOiBudWxsCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgaW5pdDogZnVuY3Rpb24gaW5pdCgpIHsKICAgICAgdGhpcy5nZXREYXRhKCk7CiAgICAgIHRoaXMuZ2V0SW5mbygpOwogICAgfSwKICAgIC8vIOe7n+iuoQogICAgZ2V0RGF0YTogZnVuY3Rpb24gZ2V0RGF0YSgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHZhciBtaW5NZW1vcnkgPSAxZTEwOwogICAgICB2YXIgbWluU2l6ZSA9IDFlMTA7CiAgICAgIHZhciBtYXhNZW1vcnkgPSAtMWUxMDsKICAgICAgdmFyIG1heFNpemUgPSAtMWUxMDsKICAgICAgdGhpcy50aW1lciA9IHNldEludGVydmFsKGZ1bmN0aW9uICgpIHsKICAgICAgICAvLyDlhoXlrZgKICAgICAgICBnZXRSZWRpc01lbW9yeSgpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgICAgdmFyIGN1cnJlbnRNZW1vcnkgPSBOdW1iZXIocmVzLnJlc3VsdC5tZW1vcnkpIC8gMTAyNDsgLy8g5pu05paw5pyA5aSn5pyA5bCP5YC8CgogICAgICAgICAgaWYgKGN1cnJlbnRNZW1vcnkgPCBtaW5NZW1vcnkpIHsKICAgICAgICAgICAgbWluTWVtb3J5ID0gY3VycmVudE1lbW9yeTsKICAgICAgICAgIH0KCiAgICAgICAgICBpZiAoY3VycmVudE1lbW9yeSA+IG1heE1lbW9yeSkgewogICAgICAgICAgICBtYXhNZW1vcnkgPSBjdXJyZW50TWVtb3J5OwogICAgICAgICAgfQoKICAgICAgICAgIF90aGlzLm1lbW9yeS5kYXRhLnB1c2goTnVtYmVyKGN1cnJlbnRNZW1vcnkudG9GaXhlZCgyKSkpOwoKICAgICAgICAgIF90aGlzLm1lbW9yeS54ZGF0YS5wdXNoKHJlcy5yZXN1bHQudGltZSk7IC8vIDXkuKrngrkKCgogICAgICAgICAgaWYgKF90aGlzLm1lbW9yeS5kYXRhLmxlbmd0aCA+PSA2KSB7CiAgICAgICAgICAgIF90aGlzLm1lbW9yeS5kYXRhLnNoaWZ0KCk7CgogICAgICAgICAgICBfdGhpcy5tZW1vcnkueGRhdGEuc2hpZnQoKTsKICAgICAgICAgIH0gLy8g5pu05paw54K55L+h5oGvCgoKICAgICAgICAgIF90aGlzLiRyZWZzLm1lbW9yeUluZm8udXBkYXRlU2VyaWVzKFt7CiAgICAgICAgICAgIG5hbWU6ICLlhoXlrZgoS0IpIiwKICAgICAgICAgICAgZGF0YTogX3RoaXMubWVtb3J5LmRhdGEKICAgICAgICAgIH1dKTsgLy8g5pu05paw5pyA5aSn5pyA5bCP5YC8CgoKICAgICAgICAgIF90aGlzLiRyZWZzLm1lbW9yeUluZm8udXBkYXRlT3B0aW9ucyh7CiAgICAgICAgICAgIHhheGlzOiB7CiAgICAgICAgICAgICAgY2F0ZWdvcmllczogX3RoaXMubWVtb3J5LnhkYXRhCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHlheGlzOiB7CiAgICAgICAgICAgICAgbWluOiBtaW5NZW1vcnkgLSAyLAogICAgICAgICAgICAgIG1heDogbWF4TWVtb3J5ICsgMgogICAgICAgICAgICB9CiAgICAgICAgICB9LCB0cnVlLCB0cnVlKTsKICAgICAgICB9KTsgLy8g6ZSu5YC8CgogICAgICAgIGdldFJlZGlzS2V5U2l6ZSgpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgICAgdmFyIGN1cnJlbnRTaXplID0gcmVzLnJlc3VsdC5rZXlTaXplOyAvLyDmm7TmlrDmnIDlpKfmnIDlsI/lgLwKCiAgICAgICAgICBpZiAoY3VycmVudFNpemUgPCBtaW5TaXplKSB7CiAgICAgICAgICAgIG1pblNpemUgPSBjdXJyZW50U2l6ZTsKICAgICAgICAgIH0KCiAgICAgICAgICBpZiAoY3VycmVudFNpemUgPiBtYXhTaXplKSB7CiAgICAgICAgICAgIG1heFNpemUgPSBjdXJyZW50U2l6ZTsKICAgICAgICAgIH0KCiAgICAgICAgICBfdGhpcy5rZXkuZGF0YS5wdXNoKGN1cnJlbnRTaXplKTsKCiAgICAgICAgICBfdGhpcy5rZXkueGRhdGEucHVzaChyZXMucmVzdWx0LnRpbWUpOyAvLyA15Liq54K5CgoKICAgICAgICAgIGlmIChfdGhpcy5rZXkuZGF0YS5sZW5ndGggPj0gNikgewogICAgICAgICAgICBfdGhpcy5rZXkuZGF0YS5zaGlmdCgpOwoKICAgICAgICAgICAgX3RoaXMua2V5LnhkYXRhLnNoaWZ0KCk7CiAgICAgICAgICB9IC8vIOabtOaWsOeCueS/oeaBrwoKCiAgICAgICAgICBfdGhpcy4kcmVmcy5rZXlTaXplLnVwZGF0ZVNlcmllcyhbewogICAgICAgICAgICBuYW1lOiAia2V55pWw6YePIiwKICAgICAgICAgICAgZGF0YTogX3RoaXMua2V5LmRhdGEKICAgICAgICAgIH1dKTsgLy8g5pu05paw5pyA5aSn5pyA5bCP5YC8CgoKICAgICAgICAgIF90aGlzLiRyZWZzLmtleVNpemUudXBkYXRlT3B0aW9ucyh7CiAgICAgICAgICAgIHhheGlzOiB7CiAgICAgICAgICAgICAgY2F0ZWdvcmllczogX3RoaXMua2V5LnhkYXRhCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIC8vIOmBv+WFjeacgOWkp+acgOWwj+WAvOS4gOiHtAogICAgICAgICAgICB5YXhpczogewogICAgICAgICAgICAgIG1pbjogbWluU2l6ZSAtIDIsCiAgICAgICAgICAgICAgbWF4OiBtYXhTaXplICsgMgogICAgICAgICAgICB9CiAgICAgICAgICB9LCB0cnVlLCB0cnVlKTsKICAgICAgICB9KTsKICAgICAgfSwgNTAwMCk7CiAgICB9LAogICAgZ2V0SW5mbzogZnVuY3Rpb24gZ2V0SW5mbygpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICBnZXRSZWRpc0luZm8oKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICB2YXIgZGF0YSA9IFtdOwogICAgICAgIHJlcy5yZXN1bHQuZm9yRWFjaChmdW5jdGlvbiAoZSkgewogICAgICAgICAgaWYgKGUuZGVzY3JpcHRpb24pIHsKICAgICAgICAgICAgZGF0YS5wdXNoKGUpOwogICAgICAgICAgfQogICAgICAgIH0pOwogICAgICAgIF90aGlzMi5yZWRpc0luZm8gPSBkYXRhOwogICAgICB9KTsKICAgIH0KICB9LAogIGJlZm9yZURlc3Ryb3k6IGZ1bmN0aW9uIGJlZm9yZURlc3Ryb3koKSB7CiAgICBpZiAodGhpcy50aW1lcikgewogICAgICBjbGVhckludGVydmFsKHRoaXMudGltZXIpOwogICAgfQogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHRoaXMuaW5pdCgpOwogIH0KfTs="},{"version":3,"sources":["redisMonitor.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <Row>\n      <Col span=\"12\">\n        <apexchart\n          ref=\"memoryInfo\"\n          type=\"area\"\n          height=\"350\"\n          :options=\"memory.chartOptions\"\n          :series=\"memory.series\"\n        />\n      </Col>\n      <Col span=\"12\">\n        <apexchart\n          ref=\"keySize\"\n          type=\"area\"\n          height=\"350\"\n          :options=\"key.chartOptions\"\n          :series=\"key.series\"\n        />\n      </Col>\n    </Row>\n    <Row>\n      <Divider orientation=\"left\">Redis详细信息</Divider>\n      <Table :columns=\"columns\" :data=\"redisInfo\" :show-header=\"false\"></Table>\n    </Row>\n  </div>\n</template>\n\n<script>\nimport { getRedisKeySize, getRedisMemory, getRedisInfo } from \"@/api/index\";\nexport default {\n  name: \"redisMonitor\",\n  data() {\n    return {\n      memory: {\n        series: [],\n        chartOptions: {\n          chart: {\n            animations: {\n              enabled: true,\n              easing: \"linear\",\n              dynamicAnimation: {\n                speed: 5000\n              }\n            },\n            toolbar: {\n              show: false\n            },\n            zoom: {\n              enabled: false\n            }\n          },\n          dataLabels: {\n            enabled: false\n          },\n          stroke: {\n            curve: \"smooth\"\n          },\n          title: {\n            text: \"Redis内存实时占用情况（KB）\",\n            align: \"left\"\n          },\n          markers: {\n            size: 0\n          },\n          xaxis: {},\n          yaxis: {},\n          legend: {\n            show: false\n          }\n        },\n        data: [],\n        xdata: []\n      },\n      key: {\n        series: [],\n        chartOptions: {\n          chart: {\n            animations: {\n              enabled: true,\n              easing: \"linear\",\n              dynamicAnimation: {\n                speed: 5000\n              }\n            },\n            toolbar: {\n              show: false\n            },\n            zoom: {\n              enabled: false\n            }\n          },\n          dataLabels: {\n            enabled: false\n          },\n          colors: [\"#f5564e\"],\n          stroke: {\n            curve: \"smooth\"\n          },\n          title: {\n            text: \"Redis key实时数量（个）\",\n            align: \"left\"\n          },\n          markers: {\n            size: 0\n          },\n          xaxis: {},\n          yaxis: {},\n          legend: {\n            show: false\n          }\n        },\n        data: [],\n        xdata: []\n      },\n      columns: [\n        {\n          key: \"key\",\n          minWidth: 200\n        },\n        {\n          key: \"description\",\n          minWidth: 500\n        },\n        {\n          key: \"value\",\n          width: 400\n        }\n      ],\n      redisInfo: [],\n      timer: null\n    };\n  },\n  methods: {\n    init() {\n      this.getData();\n      this.getInfo();\n    },\n    // 统计\n    getData() {\n      let minMemory = 1e10;\n      let minSize = 1e10;\n      let maxMemory = -1e10;\n      let maxSize = -1e10;\n      this.timer = setInterval(() => {\n        // 内存\n        getRedisMemory().then(res => {\n          let currentMemory = Number(res.result.memory) / 1024;\n          // 更新最大最小值\n          if (currentMemory < minMemory) {\n            minMemory = currentMemory;\n          }\n          if (currentMemory > maxMemory) {\n            maxMemory = currentMemory;\n          }\n\n          this.memory.data.push(Number(currentMemory.toFixed(2)));\n          this.memory.xdata.push(res.result.time);\n          // 5个点\n          if (this.memory.data.length >= 6) {\n            this.memory.data.shift();\n            this.memory.xdata.shift();\n          }\n          // 更新点信息\n          this.$refs.memoryInfo.updateSeries([\n            {\n              name: \"内存(KB)\",\n              data: this.memory.data\n            }\n          ]);\n\n          // 更新最大最小值\n          this.$refs.memoryInfo.updateOptions(\n            {\n              xaxis: {\n                categories: this.memory.xdata\n              },\n              yaxis: {\n                min: minMemory - 2,\n                max: maxMemory + 2\n              }\n            },\n            true,\n            true\n          );\n        });\n        // 键值\n        getRedisKeySize().then(res => {\n          let currentSize = res.result.keySize;\n          // 更新最大最小值\n          if (currentSize < minSize) {\n            minSize = currentSize;\n          }\n          if (currentSize > maxSize) {\n            maxSize = currentSize;\n          }\n\n          this.key.data.push(currentSize);\n          this.key.xdata.push(res.result.time);\n          // 5个点\n          if (this.key.data.length >= 6) {\n            this.key.data.shift();\n            this.key.xdata.shift();\n          }\n          // 更新点信息\n          this.$refs.keySize.updateSeries([\n            {\n              name: \"key数量\",\n              data: this.key.data\n            }\n          ]);\n          // 更新最大最小值\n          this.$refs.keySize.updateOptions(\n            {\n              xaxis: {\n                categories: this.key.xdata\n              },\n              // 避免最大最小值一致\n              yaxis: {\n                min: minSize - 2,\n                max: maxSize + 2\n              }\n            },\n            true,\n            true\n          );\n        });\n      }, 5000);\n    },\n    getInfo() {\n      getRedisInfo().then(res => {\n        let data = [];\n        res.result.forEach(e => {\n          if (e.description) {\n            data.push(e);\n          }\n        });\n        this.redisInfo = data;\n      });\n    }\n  },\n  beforeDestroy() {\n    if (this.timer) {\n      clearInterval(this.timer);\n    }\n  },\n  mounted() {\n    this.init();\n  }\n};\n</script>\n<style lang=\"less\">\n</style>"],"sourceRoot":"src/views/sys/redis"}]}