{"remainingRequest":"D:\\dove\\project\\xboot\\xboot-front-master\\node_modules\\babel-loader\\lib\\index.js!D:\\dove\\project\\xboot\\xboot-front-master\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\dove\\project\\xboot\\xboot-front-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\dove\\project\\xboot\\xboot-front-master\\src\\views\\sys\\redis\\redis.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\dove\\project\\xboot\\xboot-front-master\\src\\views\\sys\\redis\\redis.vue","mtime":1600218271000},{"path":"D:\\dove\\project\\xboot\\xboot-front-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\dove\\project\\xboot\\xboot-front-master\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\dove\\project\\xboot\\xboot-front-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\dove\\project\\xboot\\xboot-front-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["redis.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"search\">\n    <Card>\n      <Tabs :animated=\"false\" @on-click=\"handleClickTab\">\n        <TabPane label=\"Redis管理\">\n          <Row v-show=\"openSearch\" @keydown.enter.native=\"handleSearch\">\n            <Form ref=\"searchForm\" :model=\"searchForm\" inline :label-width=\"40\">\n              <Form-item label=\"Key\" prop=\"key\">\n                <Input\n                  type=\"text\"\n                  v-model=\"searchForm.key\"\n                  placeholder=\"请输入Key\"\n                  clearable\n                  style=\"width: 200px\"\n                />\n              </Form-item>\n              <Form-item style=\"margin-left:-35px;\" class=\"br\">\n                <Button @click=\"handleSearch\" type=\"primary\" icon=\"ios-search\">搜索</Button>\n                <Button @click=\"handleReset\">重置</Button>\n              </Form-item>\n            </Form>\n          </Row>\n          <Row class=\"operation\">\n            <Button @click=\"add\" type=\"primary\" icon=\"md-add\">添加</Button>\n            <Button type=\"error\" @click=\"clear\" icon=\"md-trash\">清空所有</Button>\n            <Button @click=\"delAll\" icon=\"md-trash\">批量删除</Button>\n            <Button @click=\"getDataList\" icon=\"md-refresh\">刷新</Button>\n            <Button type=\"dashed\" @click=\"openSearch=!openSearch\">{{openSearch ? \"关闭搜索\" : \"开启搜索\"}}</Button>\n            <Button type=\"dashed\" @click=\"openTip=!openTip\">{{openTip ? \"关闭提示\" : \"开启提示\"}}</Button>\n          </Row>\n          <Row v-show=\"openTip\">\n            <Alert show-icon>\n              已选择\n              <span class=\"select-count\">{{selectCount}}</span> 项\n              <a class=\"select-clear\" @click=\"clearSelectAll\">清空</a>\n            </Alert>\n          </Row>\n          <Row>\n            <Table\n              :loading=\"loading\"\n              border\n              :columns=\"columns\"\n              :data=\"data\"\n              ref=\"table\"\n              sortable=\"custom\"\n              @on-sort-change=\"changeSort\"\n              @on-selection-change=\"changeSelect\"\n            ></Table>\n          </Row>\n          <Row type=\"flex\" justify=\"end\" class=\"page\">\n            <Page\n              :current=\"pageNumber\"\n              :total=\"total\"\n              :page-size=\"pageSize\"\n              @on-change=\"changePage\"\n              @on-page-size-change=\"changePageSize\"\n              :page-size-opts=\"[10,20,50]\"\n              size=\"small\"\n              show-total\n              show-elevator\n              show-sizer\n            ></Page>\n          </Row>\n        </TabPane>\n        <TabPane name=\"monitor\" label=\"Redis监控\">\n          <redis-monitor />\n        </TabPane>\n      </Tabs>\n    </Card>\n\n    <Modal :title=\"modalTitle\" v-model=\"modalVisible\" :mask-closable=\"false\" :width=\"500\">\n      <Form ref=\"form\" :model=\"form\" :label-width=\"80\" :rules=\"formValidate\">\n        <FormItem label=\"Key\" prop=\"key\">\n          <Input v-model=\"form.key\" style=\"width:100%\" />\n        </FormItem>\n        <FormItem label=\"Value\" prop=\"value\">\n          <Input v-model=\"form.value\" type=\"textarea\" :rows=\"5\" style=\"width:100%\" />\n        </FormItem>\n        <FormItem label=\"过期时间\" prop=\"expireTime\">\n          <Tooltip trigger=\"hover\" placement=\"right\" content=\"永久不过期设为-1\">\n            <InputNumber :min=\"-1\" v-model=\"form.expireTime\"></InputNumber>\n          </Tooltip> 秒\n        </FormItem>\n      </Form>\n      <div slot=\"footer\">\n        <Button type=\"text\" @click=\"modalVisible=false\">取消</Button>\n        <Button type=\"primary\" :loading=\"submitLoading\" @click=\"handleSubmit\">提交</Button>\n      </div>\n    </Modal>\n  </div>\n</template>\n\n<script>\nimport {\n  getRedisData,\n  saveRedis,\n  deleteRedis,\n  deleteAllRedis,\n  getRedisByKey,\n  getRedisKeySize\n} from \"@/api/index\";\nimport redisMonitor from \"./redisMonitor.vue\";\nexport default {\n  name: \"redis-notCache\",\n  components: {\n    redisMonitor\n  },\n  data() {\n    return {\n      openSearch: true,\n      openTip: true,\n      loading: true, // 表单加载状态\n      modalType: 0, // 添加或编辑标识\n      modalVisible: false, // 添加或编辑显示\n      modalTitle: \"\", // 添加或编辑标题\n      searchForm: {\n        // 搜索框初始化对象\n        pageNumber: 1, // 当前页数\n        pageSize: 10, // 页面大小\n        sort: \"createTime\", // 默认排序字段\n        order: \"desc\" // 默认排序方式\n      },\n      form: {\n        // 添加或编辑表单对象初始化数据\n        key: \"\",\n        value: \"\",\n        expireTime: null\n      },\n      // 表单验证规则\n      formValidate: {\n        key: [{ required: true, message: \"不能为空\", trigger: \"blur\" }],\n        value: [{ required: true, message: \"不能为空\", trigger: \"blur\" }],\n        expireTime: [\n          {\n            required: true,\n            type: \"number\",\n            message: \"不能为空\",\n            trigger: \"blur\"\n          }\n        ]\n      },\n      submitLoading: false, // 添加或编辑提交状态\n      selectList: [], // 多选数据\n      selectCount: 0, // 多选计数\n      columns: [\n        // 表头\n        {\n          type: \"selection\",\n          width: 60,\n          align: \"center\"\n        },\n        {\n          type: \"index\",\n          width: 60,\n          align: \"center\"\n        },\n        {\n          title: \"Key\",\n          key: \"key\",\n          minWidth: 200,\n          sortable: true\n        },\n        {\n          title: \"Value\",\n          key: \"value\",\n          minWidth: 400,\n          ellipsis: true\n        },\n        {\n          title: \"过期时间(秒)\",\n          key: \"expireTime\",\n          width: 130\n        },\n        {\n          title: \"操作\",\n          key: \"action\",\n          align: \"center\",\n          width: 200,\n          render: (h, params) => {\n            return h(\"div\", [\n              h(\n                \"Button\",\n                {\n                  props: {\n                    type: \"primary\",\n                    size: \"small\",\n                    icon: \"ios-create-outline\"\n                  },\n                  style: {\n                    marginRight: \"5px\"\n                  },\n                  on: {\n                    click: () => {\n                      this.edit(params.row);\n                    }\n                  }\n                },\n                \"编辑\"\n              ),\n              h(\n                \"Button\",\n                {\n                  props: {\n                    type: \"error\",\n                    size: \"small\",\n                    icon: \"md-trash\"\n                  },\n                  on: {\n                    click: () => {\n                      this.remove(params.row);\n                    }\n                  }\n                },\n                \"删除\"\n              )\n            ]);\n          }\n        }\n      ],\n      data: [], // 表单数据\n      pageNumber: 1, // 当前页数\n      pageSize: 10, // 页面大小\n      total: 0 // 表单数据总数\n    };\n  },\n  methods: {\n    init() {\n      // 键值\n      getRedisKeySize().then(res => {\n        let size = res.result.keySize;\n        if (size > 100000) {\n          this.$Notice.info({\n            title: \"提示\",\n            desc:\n              \"检测到存储的数据已超过10万条，为避免加载过多数据当前仅显示前10万条数据\"\n          });\n        }\n      });\n      this.getDataList();\n    },\n    handleClickTab(name) {\n      if (name == \"monitor\") {\n        this.$Message.info(\"每隔5秒刷新一次数据，请耐心等待图表绘制\");\n      }\n    },\n    changePage(v) {\n      this.searchForm.pageNumber = v;\n      this.getDataList();\n      this.clearSelectAll();\n    },\n    changePageSize(v) {\n      this.searchForm.pageSize = v;\n      this.getDataList();\n    },\n    handleSearch() {\n      this.searchForm.pageNumber = 1;\n      this.searchForm.pageSize = 10;\n      this.getDataList();\n    },\n    handleReset() {\n      this.$refs.searchForm.resetFields();\n      this.searchForm.pageNumber = 1;\n      this.searchForm.pageSize = 10;\n      // 重新加载数据\n      this.getDataList();\n    },\n    changeSort(e) {\n      this.searchForm.sort = e.key;\n      this.searchForm.order = e.order;\n      if (e.order == \"normal\") {\n        this.searchForm.order = \"\";\n      }\n      this.getDataList();\n    },\n    clearSelectAll() {\n      this.$refs.table.selectAll(false);\n    },\n    changeSelect(e) {\n      this.selectList = e;\n      this.selectCount = e.length;\n    },\n    getDataList() {\n      this.loading = true;\n      getRedisData(this.searchForm).then(res => {\n        this.loading = false;\n        if (res.success) {\n          this.data = res.result.content;\n          this.total = res.result.totalElements;\n        }\n      });\n    },\n    handleSubmit() {\n      this.$refs.form.validate(valid => {\n        if (valid) {\n          this.submitLoading = true;\n          // 添加或编辑\n          saveRedis(this.form).then(res => {\n            this.submitLoading = false;\n            if (res.success) {\n              this.$Message.success(\"操作成功\");\n              this.getDataList();\n              this.modalVisible = false;\n            }\n          });\n        }\n      });\n    },\n    add() {\n      this.modalType = 0;\n      this.modalTitle = \"添加\";\n      this.$refs.form.resetFields();\n      delete this.form.id;\n      this.modalVisible = true;\n    },\n    edit(v) {\n      this.modalType = 1;\n      this.modalTitle = \"编辑\";\n      this.$refs.form.resetFields();\n      // 转换null为\"\"\n      for (let attr in v) {\n        if (v[attr] == null) {\n          v[attr] = \"\";\n        }\n      }\n      let str = JSON.stringify(v);\n      let data = JSON.parse(str);\n      this.form.value = \"读取中...\";\n      this.form.expireTime = null;\n      getRedisByKey(data.key).then(res => {\n        this.form.value = \"\";\n        if (res.success) {\n          data.value = res.result.value;\n          data.expireTime = res.result.expireTime;\n          this.form = data;\n        }\n      });\n      this.modalVisible = true;\n    },\n    clear(v) {\n      this.$Modal.confirm({\n        title: \"请谨慎进行此操作！\",\n        content: \"您确认要彻底清空删除所有数据?\",\n        loading: true,\n        onOk: () => {\n          // 删除\n          deleteAllRedis().then(res => {\n            this.$Modal.remove();\n            if (res.success) {\n              this.$Message.success(\"操作成功\");\n              this.getDataList();\n            }\n          });\n        }\n      });\n    },\n    remove(v) {\n      this.$Modal.confirm({\n        title: \"确认删除\",\n        // 记得确认修改此处\n        content: \"您确认要删除 \" + v.key + \" ?\",\n        loading: true,\n        onOk: () => {\n          // 删除\n          deleteRedis({ keys: v.key }).then(res => {\n            this.$Modal.remove();\n            if (res.success) {\n              this.$Message.success(\"操作成功\");\n              this.getDataList();\n            }\n          });\n        }\n      });\n    },\n    delAll() {\n      if (this.selectCount <= 0) {\n        this.$Message.warning(\"您还未选择要删除的数据\");\n        return;\n      }\n      this.$Modal.confirm({\n        title: \"确认删除\",\n        content: \"您确认要删除所选的 \" + this.selectCount + \" 条数据?\",\n        loading: true,\n        onOk: () => {\n          let keys = \"\";\n          this.selectList.forEach(function(e) {\n            keys += e.key + \",\";\n          });\n          keys = keys.substring(0, keys.length - 1);\n          // 批量删除\n          deleteRedis({ keys: keys }).then(res => {\n            this.$Modal.remove();\n            if (res.success) {\n              this.$Message.success(\"操作成功\");\n              this.clearSelectAll();\n              this.getDataList();\n            }\n          });\n        }\n      });\n    }\n  },\n  mounted() {\n    this.init();\n  }\n};\n</script>\n<style lang=\"less\">\n@import \"../../../styles/table-common.less\";\n</style>"],"sourceRoot":"src/views/sys/redis"}]}